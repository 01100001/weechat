[command]*`away`* attiva/disattiva lo stato di assenza::
........................................
/away  [-all] [<messaggio>]

     -all: attiva/disattiva lo stato di assenza su tutti i server connessi
messaggio: messaggio di assenza (se non specificato, lo stato di assenza viene rimosso)
........................................

[command]*`bar`* gestione barre::
........................................
/bar  list|listfull|listitems
      add <name> <type>[,<cond1>[,<cond2>...]] <position> <size> <separator> <item1>[,<item2>...]
      default [input|title|status|nicklist]
      del <name>|-all
      set <name> <option> <value>
      hide|show|toggle <name>
      scroll <name> <buffer> <scroll_value>

         list: list all bars
     listfull: list all bars (verbose)
    listitems: list all bar items
          add: add a new bar
         name: name of bar (must be unique)
         type:   root: outside windows,
               window: inside windows, with optional conditions (see below)
    cond1,...: condition(s) for displaying bar (only for type "window"):
                 active: on active window
               inactive: on inactive windows
               nicklist: on windows with nicklist
               without condition, bar is always displayed
     position: bottom, top, left or right
         size: size of bar (in chars)
    separator: 1 for using separator (line), 0 or nothing means no separator
    item1,...: items for this bar (items can be separated by comma (space between items) or "+" (glued items))
      default: create a default bar (all default bars if no bar name is given)
          del: delete a bar (or all bars with -all)
          set: set a value for a bar property
       option: option to change (for options list, look at /set weechat.bar.<barname>.*)
        value: new value for option
         hide: hide a bar
         show: show an hidden bar
       toggle: hide/show a bar
       scroll: scroll bar
       buffer: name of buffer to scroll ('*' means current buffer, you should use '*' for root bars)
 scroll_value: value for scroll: 'x' or 'y', followed by '+', '-', 'b' (beginning) or 'e' (end), value (for +/-), and optional %% (to scroll by %% of width/height, otherwise value is number of chars)

Examples:
  create a bar with time, buffer number + name, and completion:
    /bar add mybar root bottom 1 0 [time],buffer_number+:+buffer_name,completion
  hide a bar:
    /bar hide mybar
  scroll nicklist 10 lines down on current buffer:
    /bar scroll nicklist * y+10
  scroll nicklist one page up on #weechat buffer:
    /bar scroll nicklist #weechat y-100%
  scroll to end of nicklist on current buffer:
    /bar scroll nicklist * ye
........................................

[command]*`buffer`* gestione buffer::
........................................
/buffer  list
         clear [<numero>|-merged|-all]
         move|merge <numero>
         unmerge [<numero>]
         close [<n1>[-<n2>]]
         notify <livello>
         localvar
         set <proprietà> <valore>
         get <proprietà>
         <numero>|<nome>

    list: elenca i buffer (senza argomento viene mostrata questa lista)
   clear: pulisce il contenuto del buffer (numero per un buffer, -merged per i buffer incollati, -all per tutti i buffer o nessun parametro per quello corrente)
    move: sposta il buffer nella lista (può essere relativo, ad esempio -1)
   merge: unisce il buffer corrente ad un altro (l'area di chat risulterà un mix di entrambi)
          (la combinazione predefinita ctrl-x alterna tra i buffer incollati)
 unmerge: stacca il buffer dagli altri che hanno lo stesso numero
   close: chiude buffer (numero/serie sono opzionali)
  notify: imposta il livello di notifica per il buffer corrente: questo livello determina se il buffer deve essere aggiunto alla hotlist oppure no:
               none: mai
          highlight: solo per gli eventi
            message: messaggi dagli utenti + eventi
                all: tutti i messaggi
              reset: ripristina al valore predefinito (tutto)
localvar: visualizza le variabili locali per il buffer corrente
     set: imposta una proprietà per il buffer corrente
     get: mostra una proprietà del buffer corrente
  numero: passa al buffer per numero, prefisso possibile:
          '+': passaggio relativo, aggiunge un numero a quello corrente
          '-': passaggio relativo, sottrae un numero a quello corrente
          '*': passa al numero, usando l'opzione "weechat.look.jump_current_to_previous_buffer"
    nome: passa al buffer tramite nome (parziale)

Examples:
  pulisce il buffer corrente:
    /buffer clear
  sposta il buffer al numero 5:
    /buffer move 5
  unisce con il buffer core:
    /buffer merge 1
  stacca il buffer:
    /buffer unmerge
  chiude il buffer corrente:
    /buffer close
  chiude i buffer da 5 a 7:
    /buffer close 5-7
  passa a #weechat:
    /buffer #weechat
  passa al buffer successivo:
    /buffer +1
........................................

[command]*`color`* definisce gli alias dei colori e visualizza la tavolozza dei colori::
........................................
/color  alias <colore> <alias>
        unalias <colore>
        reset

  alias: aggiunge un alias per un colore
unalias: elimina un alias
 colore: numero colore (>= 0, il massimo dipende dal terminale, di solito 63 o 255)
   nome: nome alias per il colore (ad esempio: "arancione")
  reset: ripristina tutte le coppie di colore (utile quando non ci sono più coppie disponibili)

senza argomento, il comando mostra i colori in un nuovo buffer.

Esempi:
  aggiunge alias "arancione" per il colore 214:
    /color alias 214 orange
  elimina il colore 214:
    /color unalias 214
........................................

[command]*`command`* esegui comando o plugin di WeeChat esplicito::
........................................
/command  <plugin> <comando>

 plugin: nome plugin ('weechat' per il comando interno di WeeChat)
comando: comando da eseguire (una '/' viene aggiunta automaticamente se non trovata all'inizio del comando)
........................................

[command]*`debug`* attiva debug per core/plugin::
........................................
/debug  list
        set <plugin> <livello>
        dump [<plugin>]
        buffer|color|memory|term|windows

   list: elenca i plugin con i livelli di debug
    set: imposta il livello di debug per il plugin
 plugin: nome del plugin ("core" per il core di WeeChat)
livello: livello di debug per il plugin (0 = disattiva debug)
   dump: salva un dump della memoria nel file di log di WeeChat (lo stesso dump viene salvato in caso di crash di WeeChat)
 buffer: esegue un dump del contenuto del buffer con valori esadecimali nel file di log
  color: mostra informazioni sulle coppie di colore correnti
 memory: mostra informazioni sull'uso della memoria
   term: mostra informazioni sul terminale
windows: mostra l'albero delle finestre
........................................

[command]*`filter`* filtra messaggi nei buffer, per nascondere/mostrare in base a tag o regexp::
........................................
/filter  list
         enable|disable|toggle [<name>]
         add <name> <buffer>[,<buffer>...] <tags> <regex>
         del <name>|-all

   list: list all filters
 enable: enable filters (filters are enabled by default)
disable: disable filters
 toggle: toggle filters
   name: filter name
    add: add a filter
    del: delete a filter
   -all: delete all filters
 buffer: comma separated list of buffers where filter is active:
         - this is full name including plugin (example: "irc.freenode.#weechat")
         - "*" means all buffers
         - a name starting with '!' is excluded
         - name can start or end with '*' to match many buffers
   tags: comma separated list of tags, for example: "irc_join,irc_part,irc_quit"
  regex: regular expression to search in line
         - use '\t' to separate prefix from message, special chars like '|' must be escaped: '\|'
         - if regex starts with '!', then matching result is reversed (use '\!' to start with '!')
         - two regular expressions are created: one for prefix and one for message

The default key alt+'=' toggles filtering on/off.

Tags most commonly used:
  no_filter, no_highlight, no_log, log0..log9 (log level),
  notify_message, notify_private, notify_highlight,
  nick_xxx (xxx is nick in message),
  irc_xxx (xxx is command name or number, see /server raw),
  irc_numeric, irc_error, irc_action, irc_ctcp, irc_ctcp_reply, irc_smart_filter, away_info.

Examples:
  use IRC smart filter on all buffers:
    /filter add irc_smart * irc_smart_filter *
  use IRC smart filter on all buffers except those with "#weechat" in name:
    /filter add irc_smart *,!*#weechat* irc_smart_filter *
  filter all IRC join/part/quit messages:
    /filter add joinquit * irc_join,irc_part,irc_quit *
  filter nicks displayed when joining channels or with /names:
    /filter add nicks * irc_366 *
  filter nick "toto" on IRC channel #weechat:
    /filter add toto irc.freenode.#weechat * toto\t
  keep only nick "titi" on IRC channel #test:
    /filter add titi irc.freenode.#test * !titi\t
  filter lines containing word "spam":
    /filter add filterspam * * spam
  filter lines containing "weechat sucks" on IRC channel #weechat:
    /filter add sucks irc.freenode.#weechat * weechat sucks
........................................

[command]*`help`* visualizza l'aiuto su comandi e opzioni::
........................................
/help  -list|-listfull [<plugin> [<plugin>...]]
       <comando>
       <opzione>

    -list: elenca i comandi, per plugin (senza argomento, viene mostrata questa lista)
-listfull: elenca i comandi con la relativa descrizione, per plugin
   plugin: elenca i comandi per questo plugin
  comando: nome di un comando
  opzione: nome di un'opzione (usare /set per consultare la lista)
........................................

[command]*`history`* mostra la cronologia dei comandi del buffer::
........................................
/history  <clear
          valore>

 clear: pulisci cronologia
valore: numero delle voci nella cronologia da mostrare
........................................

[command]*`input`* funzioni per la riga di comando::
........................................
/input  <azioni> [<argomenti>]

list of actions:
  return: simulate key "enter"
  complete_next: complete word with next completion
  complete_previous: complete word with previous completion
  search_text: search text in buffer
  delete_previous_char: delete previous char
  delete_next_char: delete next char
  delete_previous_word: delete previous word
  delete_next_word: delete next word
  delete_beginning_of_line: delete from beginning of line until cursor
  delete_end_of_line: delete from cursor until end of line
  delete_line: delete entire line
  clipboard_paste: paste from clipboard
  transpose_chars: transpose two chars
  undo: undo last command line action
  redo: redo last command line action
  move_beginning_of_line: move cursor to beginning of line
  move_end_of_line: move cursor to end of line
  move_previous_char: move cursor to previous char
  move_next_char: move cursor to next char
  move_previous_word: move cursor to previous word
  move_next_word: move cursor to next word
  history_previous: recall previous command in current buffer history
  history_next: recall next command in current buffer history
  history_global_previous: recall previous command in global history
  history_global_next: recall next command in global history
  jump_smart: jump to next buffer with activity
  jump_last_buffer: jump to last buffer
  jump_previously_visited_buffer: jump to previously visited buffer
  jump_next_visited_buffer: jump to next visited buffer
  hotlist_clear: clear hotlist
  grab_key: grab a key
  grab_key_command: grab a key with its associated command
  scroll_unread: scroll to unread marker
  set_unread: set unread marker for all buffers
  set_unread_current_buffer: set unread marker for current buffer
  switch_active_buffer: switch to next merged buffer
  switch_active_buffer_previous: switch to previous merged buffer
  insert: insert text in command line

This command is used by key bindings or plugins.
........................................

[command]*`key`* associa/disassocia tasti::
........................................
/key  list|listdefault|listdiff
      bind <tasto> [<comando> [<args>]]
      unbind <tasto>
      reset <tasto>
      resetall -yes
      missing

       list: elenca tutti i tasti correnti (senza argomento, viene visualizzata questa lista)
listdefault: elenca i tasti predefiniti
   listdiff: elenca le differenze tra tasti attuali e predefiniti (tasti aggiunti, ridefiniti o eliminati)
       bind: associa un comando ad un tasto o visualizza il comando associato al tasto
     unbind: rimuove una associazione di tasti
      reset: ripristina un tasto all'assegnazione predefinita
   resetall: ripristina le associazioni ai valori predefiniti ed elimina TUTTE le associazioni personalizzate (usare con cautela!)
    missing: aggiunge tasti mancanti (utilizzando le associazioni predefinite), utile dopo l'installazione di una nuova versione di WeeChat

Al momento di associare un comando ad un tasto si raccomanda di utilizzare il tasto alt+k (oppure Esc e k), e digitare il tasto da associare: il codice tasto verrà inserito nella riga di comando.

Esempi:
  il tasto alt-x per alternare la barra della nicklist:
    /key bind meta-x /bar toggle nicklist
  il tasto alt-r per passare al canale IRC #weechat:
    /key bind meta-r /buffer #weechat
  ripristinare l'associazione predefinita per il tasto alt-r:
    /key reset meta-r
........................................

[command]*`layout`* salva/applica/ripristina il layout per i buffer e le finestre::
........................................
/layout  save [buffers|windows]
         apply [buffers|windows]
         reset [buffers|windows]

   save: salva il layout corrente
  apply: applica il layout salvato
  reset: elimina il layout salvato
buffers: salva/applica modifiche solo ai buffer (ordine dei buffer)
windows: salva/applica modifiche solo alle finestre (buffer visualizzato da ogni finestra)

Senza argomenti, il comando visualizza il layout salvato.
........................................

[command]*`mute`* esegue un comando in silenzio::
........................................
/mute  [-current | -buffer <nome> | -all] comando

-current: nessun output sul buffer corrente
 -buffer: nessun output sul buffer specificato
    nome: nome completo del buffer (esempi: "irc.server.freenode", "irc.freenode.#weechat")
    -all: nessun output su TUTTI i buffer
 command: comando da eseguire in silenzio (una '/' viene aggiunta automaticamente all'inizio del comando se non trovata)

Se non viene specificata una destinazione (-current, -buffer o -all), la destinazione predefinita è il buffer core di WeeChat.

Esempi:
  salva la configurazione:
    /mute save
  messaggio sul canale IRC corrente:
    /mute -current msg * ciao!
  messaggio sul canale #weechat:
    /mute -buffer irc.freenode.#weechat msg #weechat ciao!
........................................

[command]*`plugin`* elenca/attiva/disattiva plugin::
........................................
/plugin  list|listfull [<nome>]
         load <nomefile>
         autoload
         reload|unload [<nome>]

    list: elenca i plugin attivati
listfull: elenca i plugin attivati (dettagliato)
    load: attiva un plugin
autoload: attiva automaticamente un plugin nella cartella di sistema o utente
  reload: riattiva un plugin (se non viene dato un nome, disattiva e poi riattiva tutti i plugin)
  unload: disattiva un plugin (se non viene dato un nome, disattiva tutti i plugin

Senza argomento, questo comando elenca i plugin attivati.
........................................

[command]*`proxy`* gestione proxy::
........................................
/proxy  list
        add <nome> <tipo> <indirizzo> <porta> [<nomeutente> [<password>]]
        del <nome>|-all
        set <nome> <opzione> <valore>

    list: elenca tutti i proxy
     add: aggiunge un nuovo proxy
    nome: nome del proxy (deve essere unico)
    tipo: http, socks4 o socks5
 address: IP o nome host
    port: porta
username: nome utente (opzionale)
password: password (opzionale)
     del: elimina un proxy (o tutti i proxy con -all)
     set: imposta un valore per la proprietà di un proxy
  option: opzione da modificare (per una lista di opzioni, consultare /set weechat.proxy.<nomeproxy>.*)
   value: nuovo valore per l'opzione

Esempi:
  crea un proxy http, in esecuzione sull'host locale, porta 8888:
    /proxy add local http 127.0.0.1 8888
  crea un proxy http usando il protocollo IPv6:
    /proxy add local http 127.0.0.1 8888
    /proxy set local ipv6 on
  crea un proxy socks5 con nomeutente/password:
    /proxy add myproxy socks5 sample.host.org 3128 myuser mypass
  elimina un proxy:
    /proxy del mioproxy
........................................

[command]*`quit`* esce da WeeChat::
........................................
/quit  [-yes] [<argomenti>]

     -yes: richiesto se l'opzione option weechat.look.confirm_quit è abilitata
argomenti: testo inviato con il segnale "quit"
           (ad esempio il plugin irc usa questo testo per inviare il messaggio di uscita al server)
........................................

[command]*`reload`* ricarica i file di configurazione da disco::
........................................
/reload  [<file> [<file....>]]

file: file di configurazione da ricaricare (senza estensione ".conf")

Senza argomento, vengono ricaricati tutti i file (WeeChat e plugin).
........................................

[command]*`save`* salva i file di configurazione su disco::
........................................
/save  [<file> [<file....>]]

file: file di configurazione da salvare (senza estensione ".conf")

Senza argomento, vengono salvati tutti i file (WeeChat e plugin).
........................................

[command]*`set`* imposta le opzioni di configurazione::
........................................
/set  [<opzione> [<valore>]]

opzione: nome di un'opzione (può iniziare o terminare con '*' per visualizzare più opzioni)
 valore: nuovo valore per l'opzione

Il nuovo valore può essere, a seconda del tipo di variabile:
  booleano: on, off o toggle
  intero  : numero, ++numero o --numero
  stringa : qualsiasi stringa ("" per una stringa vuota)
  colore  : nome colore, ++numeero o --numero

Per tutti i tipi, è possibile usare null per rimuovere il valore dell'opzione (valore non definito). Ciò funziona solo per alcune variabili speciali dei plugin.

Esempi:
  mostra le opzioni relative agli eventi:
    /set *highlight*
  aggiunge una parola all'evento:
    /set weechat.look.highlight "word"
........................................

[command]*`unset`* annulla/ripristina opzione::
........................................
/unset  <opzione>

opzione: nome di un'opzione (può iniziare o terminare con "*" per il ripristino di più opzioni, attenzione!)

A seconda dell'opzione, essa viene ripristinata (per le opzioni standard) o rimossa (per le impostazioni opzionali, come i valori del server).

Esempi:
  ripristina un'opzione:
    /unset weechat.look.item_time_format
  ripristina tutte le opzioni del colore:
    /unset weechat.color.*
........................................

[command]*`upgrade`* aggiorna WeeChat senza disconnettere dai server::
........................................
/upgrade  [<percorso_del_binario>]

percorso_del_binario: percorso del binario di WeeChat (quello corrente è il predefinito)

Questo comando esegue nuovamente un binario WeeChat, perciò deve essere stato compilato o installato con un gestore di pacchetti prima di eseguire questo comando.

Il processo di aggiornamento è diviso in 4 fasi:
  1. salvataggio della sessione in file per il core e i plugin (buffer, cronologia, ..)
  2. disattivazione di tutti i plugin (salvataggio delle configurazioni .conf)
  3. salvataggio della configurazione di WeeChat (weechat.conf)
  4. esecuzione del nuovo binario di WeeChat.
........................................

[command]*`uptime`* mostra l'uptime di WeeChat::
........................................
/uptime  [-o | -ol]

 -o: invia l'uptime al buffer corrente come input (stringa in inglese)
-ol: invia l'uptime al buffer corrente come input (stringa tradotta)
........................................

[command]*`version`* mostra la versione e la data di compilazione di WeeChat::
........................................
/version  [-o | -ol]

 -o: invia la versione al buffer corrente come input (stringa inglese)
-ol: invia la versione al buffer corrente come input (stringa tradotta)
........................................

[command]*`wait`* pianifica l'esecuzione di un comando::
........................................
/wait  <numero>[<unità>] <comando>

 numero: tempo di attesa (numero intero)
  unità: valori opzionali sono:
           ms: millisecondi
            s: secondi (predefinito)
            m: minuti
            h: ore
comando: comando da eseguire (o testo da inviare al buffer se il comando non inizia con '/')

Nota: il comando viene eseguito sui buffer dove /wait è stato eseguito (se il buffer non viene trovato (per esempio se è stato chiuso prima dell'esecuzione), allora il comando verrà eseguito sul buffer core di WeeChat)

Esempi:
  entra nel canale tra 10 secondi:
    /wait 10 /join #test
  imposta assenza tra 15 minuti:
    /wait 15m /away -all Sono assente
  scrive 'ciao' tra 2 minuti:
    /wait 2m ciao
........................................

[command]*`window`* gestione finestre::
........................................
/window  list
         -1|+1|b#|up|down|left|right
         splith|splitv [<pct>]
         resize [+/-]<pct>
         merge [all]
         page_up|page_down
         refresh
         scroll|scroll_up|scroll_down|scroll_top|scroll_bottom|scroll_previous_highlight|scroll_next_highlight
         zoom

         list: elenca le finestre aperte (senza argomento, questa lista viene visualizzata)
           -1: salta alla finestra precedente
           +1: salta alla finestra successiva
           b#: salta alla finestra successiva che visualizza il buffer numero #
           up: passa alla finestra superiore a quella corrente
         down: passa alla finestra inferiore a quella attiva
         left: passa alla finestra a sinistra
        right: passa alla finestra a destra
       splith: divide la finestra attiva orizzontalmente
       splitv: divide la finestra attiva verticalmente
       resize: ridimensiona finestra, la nuova dimensione è <pct> percentuale della finestra genitore
        merge: unisce la finestra con un'altra (all = mantiente una sola finestra)
      page_up: scorre di una pagina in alto
    page_down: scorre di una pagina in basso
      refresh: aggiorna lo schermo
       scroll: scorre di un numero di righe (+/-N) o in base al tempo: s=secondi, m=minuti, h=ore, d=giorni, M=mesi, y=anni
    scroll_up: scorre di alcune righe in alto
  scroll_down: scorre di alcune righe in basso
   scroll_top: scorre fino all'inizio del buffer
scroll_bottom: scorre fino alla fine del buffer buffer
scroll_previous_highlight: passa all'evento precedente
    scroll_next_highlight: passa all'evento successivo
         zoom: ingrandimento sulla finestra

Per splith e splitv, pct è una percentuale che rappresenta la dimensione della nuova finestra, calcolata con la finestra attiva come riferimento per la dimensione. Per esempio 25 vuol dire creare una finestra di dimensione = dimensione_attuale / 4

Esempi:
  salta alla finestra che visualizza il buffer #1:
    /window b1
  scorre di due righe in alto:
    /window scroll -2
  scorre all'indietro di due giorni:
    /window scroll -2d
  scorre all'inizio del giorno attuale:
     /window scroll -d
........................................

