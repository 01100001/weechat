&bull; *`/away`* `[-all] [messaggio]`::

........................................
  attiva/disattiva lo stato di assenza

       -all: attiva/disattiva lo stato di assenza su tutti i server connessi
  messaggio: messaggio di assenza (se non specificato, lo stato di assenza viene rimosso)
........................................

&bull; *`/bar`* `[add nome_barra tipo[,cond1,cond2,...] posizione dimensione separatore elemento1,elemento2,...] | [default] | [del nome_barra|-all] | [set nome_barra opzione valore] | [hide|show|toggle nome_barra] | [scroll nome_barra buffer scroll_value] | [list] | [listfull] | [listitems]`::

........................................
  gestione barre

            add: aggiungi una nuova barra
     nome_barra: nome della barra (deve essere unico)
           tipo: root: fuori dalle finestre,
                 window: all'interno delle finestre, con opzioni condizionali (a seguire)
      cond1,...: condizione(i) per la visualizzazione della barra (solo per quelle di tipo "window"):
                   active: sulla finestra attiva
                 inactive: sulle finestre inattive
                 nicklist: sulle finestre con le liste nick
                 senza condizioni, la barra  viene sempre visualizzata
      posizione: bottom (basso), top (alto), left (sinistra) or right (destra)
     dimensione: dimensione della barra (in caratteri)
     separatore: 1 per utilizzare un separatore (riga), 0 o nessun valore corrisponde a nessun separatore
  elemento1,...: elementi per questa barra (possono essere separati da virgole (spazio tra gli elementi) or "+" (elementi incollati))
        default: crea barre predefinite
            del: elimina una barra (o tutte le barre con -all)
            set: imposta un valore per una proprietà della barra
        opzione: opzione da modificare (per un elenco di opzioni, consultare /set weechat.bar.<nome_barra>.*)
         valore: nuovo valore per l'opzione
           hide: nasconde una barra
           show: mostra una barra nascosta
         toggle: nasconde/mostra una barra
         scroll: scorre la barra in alto/basso
         buffer: nome del buffer da scorrere ('*' sta per buffer corrente, è consigliato utilizzare '*' per le barre root)
   scroll_value: valore per lo scorrimento: 'x' o 'y', seguito da '+', '-', 'b' (inizio) o 'e' (fine), valore (per +/-), e un opzionale %% (per scorrere di %% di larghezza/altezza, altrimenti il valore è un numero di caratteri)
           list: elenca tutte le barre
       listfull: elenca tutte le barre (dettagliato)
      listitems: elenca tutti gli elementi barra
  
  Esempi:
    crea  una barra con l'ora, il numero del buffer + nome, e completamento:
      /bar add miabarra root bottom 1 0 [time],buffer_number+:+buffer_name,completion
    nasconde una barra:
      /bar hide mibarra
    scorre lista nick di 10 linee in basso sul buffer corrente:
      /bar scroll nicklist * y+10
    scorre la lista nick una pagina in su sul buffer #weechat:
      /bar scroll nicklist #weechat y-100%
    scorre fino alla fine della lista nick sul buffer corrente:
      /bar scroll nicklist * ye
........................................

&bull; *`/buffer`* `[clear [numero | -merged | -all] | move numero | merge numero | unmerge [numero] | close [n1[-n2]] | list | notify livello | localvar | set proprietà valore | numero | nome]`::

........................................
  gestione buffer

     clear: clear buffer content (number for a buffer, -merged for merged buffers, -all for all buffers, or nothing for current buffer)
      move: move buffer in the list (may be relative, for example -1)
     merge: merge current buffer to another buffer (chat area will be mix of both buffers)
            (by default ctrl-x switches between merged buffers)
   unmerge: unmerge buffer from other buffers which have same number
     close: close buffer (number/range is optional)
      list: list buffers (no parameter implies this list)
    notify: set notify level for current buffer: this level determines whether buffer will be added to hotlist or not:
                 none: never
            highlight: for highlights only
              message: for messages from users + highlights
                  all: all messages
                reset: reset to default value (all)
  localvar: display local variables for current buffer
       set: set a property for current buffer
    number: jump to buffer by number, possible prefix:
            '+': relative jump, add number to current
            '-': relative jump, sub number to current
            '*': jump to number, using option "weechat.look.jump_current_to_previous_buffer"
      name: jump to buffer by (partial) name
  
  Examples:
    clear current buffer:
      /buffer clear
    move buffer to number 5:
      /buffer move 5
    merge with core buffer:
      /buffer merge 1
    unmerge buffer:
      /buffer unmerge
    close current buffer:
      /buffer close
    close buffers 5 to 7:
      /buffer close 5-7
    jump to #weechat:
      /buffer #weechat
    jump to next buffer:
      /buffer +1
........................................

&bull; *`/command`* `plugin comando`::

........................................
  esegui comando o plugin di WeeChat esplicito

   plugin: nome plugin ('weechat' per il comando interno di WeeChat)
  comando: comando da eseguire (una '/' viene aggiunta automaticamente se non trovata all'inizio del comando)
........................................

&bull; *`/debug`* `[list | set plugin livello | dump | buffer | windows | term]`::

........................................
  attiva debug per core/plugin

       set: imposta il livello di log per il plugin
    plugin: nome del plugin ("core" per il core di WeeChat)
   livello: livello di debug per il plugin (0 = disabilita debug)
      dump: salva il dump della memoria nel file di log di Weechat (lo stesso dump viene salvato quando WeeChat va in crash)
    buffer: esegue il dump del contenuto con valori esadecimali nel file di log
   windows: visualizza l'albero delle finestre
      term: visualizza informazioni sul terminale e i colori disponibili
........................................

&bull; *`/filter`* `[list] | [enable|disable|toggle [nome]] | [add nome plugin.buffer tag regex] | [del nome|-all]`::

........................................
  filtra messaggi nei buffer, per nascondere/mostrare in base a tag o regexp

           list: list all filters
         enable: enable filters (filters are enabled by default)
        disable: disable filters
         toggle: toggle filters
           name: filter name
            add: add a filter
            del: delete a filter
           -all: delete all filters
  plugin.buffer: plugin and buffer where filter is active ("*" for all buffers)
           tags: comma separated list of tags, for example: "irc_join,irc_part,irc_quit"
          regex: regular expression to search in line (use \t to separate prefix from message, special chars like '|' must be escaped: '\|')
  
  The default key alt+'=' toggles filtering on/off.
  
  Tags most commonly used:
    no_filter, no_highlight, log0..log9 (log level),
    notify_message, notify_private, notify_highlight,
    irc_xxx (xxx is command name or number, see /server raw), irc_numeric, irc_error, irc_action, irc_ctcp, irc_ctcp_reply, irc_smart_filter, away_info.
  
  Examples:
    use IRC smart filter for join/part/quit messages:
      /filter add irc_smart * irc_smart_filter *
    filter all IRC join/part/quit messages:
      /filter add joinquit * irc_join,irc_part,irc_quit *
    filter nicks displayed when joining channels or with /names:
      /filter add nicks * irc_366 *
    filter nick "toto" on IRC channel #weechat:
      /filter add toto irc.freenode.#weechat * toto\t
    filter lines containing word "spam":
      /filter add filterspam * * spam
    filter lines containing "weechat sucks" on IRC channel #weechat:
      /filter add sucks irc.freenode.#weechat * weechat sucks
........................................

&bull; *`/help`* `[comando | opzione]`::

........................................
  visualizza l'aiuto su comandi e opzioni

  comando: nome comando
  opzione: nome opzione (utilizza /set per vedere l'elenco)
........................................

&bull; *`/history`* `[clear | valore]`::

........................................
  mostra la cronologia dei comandi del buffer

   clear: pulisci cronologia
  valore: numero delle voci nella cronologia da mostrare
........................................

&bull; *`/input`* `return | complete_next | complete_previous | search_next | delete_previous_char | delete_next_char | delete_previous_word | delete_next_word | delete_beginning_of_line | delete_end_of_line | delete_line | clipboard_paste | transpose_chars | move_beginning_of_line | move_end_of_line | move_previous_char | move_next_char | move_previous_word | move_next_word | history_previous | history_next | history_global_previous | history_global_next | jump_smart | jump_last_buffer | jump_previously_visited_buffer | jump_next_visited_buffer | hotlist_clear | grab_key | grab_key_command | scroll_unread | set_unread | set_unread_current_buffer | switch_active_buffer | switch_active_buffer_previous | insert [args]`::

........................................
  funzioni per la riga di comando

  Questo comando è utilizzato da combinazioni di tasti o plugin.
........................................

&bull; *`/key`* `[bind tasto [comando [argomenti]]] | [unbind tasto] | [reset -yes] | [missing]`::

........................................
  associa/disassocia tasti

      bind: associa un comando ad un tasto o visualizza il comando associato al tasto
    unbind: elimina l'associazione di un tasto
     reset: ripristina le associazioni ai valori predefiniti ed elimina TUTTE le associazioni personalizzate (attenzione!)
   missing: aggiunge i tasti mancanti (utilizzando le associazioni predefinite)
  
  Quando viene associato un comando ad una chiave, è consigliato utilizzare il tasto alt+k (oppure Esc e k), e poi premere il tasto da associare: il codice tasto verrà inserito nella riga di comando.
........................................

&bull; *`/layout`* `[[save | apply | reset] [buffers | windows]]`::

........................................
  salva/applica/resetta il layout per i buffer e le finestre

     save: salva il layout corrente
    apply: applica il layout salvato
    reset: elimina il layout salvato
  buffers: salva/applica modifiche solo ai buffer (ordine dei buffer)
  windows: salva/applica modifiche solo alle finestre (buffer visualizzato da ogni finestra)
  
  Senza argomenti, il comando visualizza il layout salvato.
........................................

&bull; *`/mute`* `[-current | -buffer name | -all] command`::

........................................
  execute a command silently

  -current: no output on curent buffer
   -buffer: no output on specified buffer
      name: full buffer name (examples: "irc.server.freenode", "irc.freenode.#weechat")
      -all: no output on ALL buffers
   command: command to execute silently (a '/' is automatically added if not found at beginning of command)
  
  If no target is specified (-current, -buffer or -all), then default is to mute WeeChat core buffer only.
  
  Examples:
    config save:
      /mute save
    message to current IRC channel:
      /mute -current msg * hi!
    message to #weechat channel:
      /mute -buffer irc.freenode.#weechat msg #weechat hi!
........................................

&bull; *`/plugin`* `[list [nome]] | [listfull [nome]] | [load file] | [autoload] | [reload [nome]] | [unload [nome]]`::

........................................
  elenca/attiva/disattiva plugin

      list: elenca i plugin attivi
  listfull: elenca i plugin attivi (dettagliato)
      load: carica un plugin
  autoload: attiva automaticamente i plugin nella cartella utente o di sistema
    reload: riattiva un plugin (se non specificato, disattiva i plugin e liriattiva automaticamente)
    unload: disattiva uno o tutti i plugin
  
  Senza argomenti, questo comando elenca i plugin attivati.
........................................

&bull; *`/proxy`* `[add nome_proxy tipo indirizzo porta [nome [password]]] | [del nome_proxy|-all] | [set nome_proxy opzione valore] | [list]`::

........................................
  gestione proxy

            add: aggiungi un nuovo proxy
     nome_proxy: nome del proxy (deve essere unico)
           tipo: http, socks4 o socks5
      indirizzo: IP o nome host
           port: porta
         utente: nome utente (opzionale)
       password: password (opzionale)
            del: elimina un proxy (o tutti i proxy con -all)
            set: imposta un valore per una proprietà del proxy
        opzione: opzione da modificare (per un elenco di opzioni, consultare /set weechat.proxy.<nome_proxy>.*)
         valore: nuovo valore per l'opzione
           list: elenca tutti i proxy
  
  Esempi:
    crea un proxy http, in esecuzione su host locale, porta 8888:
      /proxy add locale http 127.0.0.1 8888
    crea un proxy http utilizzando il protocollo IPv6:
      /proxy add locale http 127.0.0.1 8888
      /proxy set locale ipv6 on
    crea un proxy socks5 con utente/password:
      /proxy add mioproxy socks5 esempio.host.org 3128 mioutente miapassword
    elimina un proxy:
      /proxy del mioproxy
........................................

&bull; *`/quit`* `[argomenti]`::

........................................
  esci da WeeChat

  argomenti: testo inviato con il segnale "quit"
             (ad esempio il plugin irc usa questo testo per inviare il messaggio di uscita al server)
........................................

&bull; *`/reload`* `[file [file....]]`::

........................................
  ricarica i file di configurazione da disco

  file: file di configurazione da ricaricare
  
  Senza argomento, tutti i file (WeeChat e plugin) vengono ricaricati.
........................................

&bull; *`/save`* `[file [file....]]`::

........................................
  salva i file di configurazione su disco

  file: file di configurazione da salvare
  
  Senza argomento, tutti i file (WeeChat e plugin) verranno salvati.
........................................

&bull; *`/set`* `[opzione [valore]]`::

........................................
  imposta le opzioni di configurazione

  opzione: nome dell'opzione
     valore: nuovo valore per l'opzione
  
  Il nuovo valore può essere, in base al tipo di variabile:
       bool: on, off oppure alterna
     intero: numero, ++numero o --numero
    stringa: qualsiasi stringa ("" per le stringhe vuote)
     colore: nome colore, ++numero o --numero
  
  Per tutti i tipi, è possibile utilizzare un valore nullo per eliminare il valore dell'opzione (non definito). Funziona solo per alcune variabili speciali dei plugin.
........................................

&bull; *`/unset`* `[opzione]`::

........................................
  annulla/resetta opzione

  opzione: nome di un'opzione (può cominciare o finire con "*" per il reset di più opzioni, attenzione!)
  
  A seconda dell'opzione, viene resettata (per le opzioni standard) o rimossa (per le impostazioni opzionali, come i valori del server)
........................................

&bull; *`/upgrade`* `[percorso_del_binario]`::

........................................
  aggiorna WeeChat senza disconnettere dai server

  percorso_del_binario: percorso del binario di WeeChat (quello corrente è il predefinito)
  
  Questo comando esegue nuovamente un binario WeeChat, perciò deve essere stato compilato o installato con un gestore di pacchetti prima di eseguire questo comando.
........................................

&bull; *`/uptime`* `[-o | -ol]`::

........................................
  mostra l'uptime di WeeChat

   -o: send uptime to current buffer as input (english string)
  -ol: send uptime to current buffer as input (translated string)
........................................

&bull; *`/version`* `[-o | -ol]`::

........................................
  mostra la versione e la data di compilazione di WeeChat

   -o: send version to current buffer as input (english string)
  -ol: send version to current buffer as input (translated string)
........................................

&bull; *`/wait`* `numero[unità] comando`::

........................................
  pianifica l'esecuzione di un comando

   number: amount of time to wait (integer number)
     unit: optional, values are:
             ms: milliseconds
              s: seconds (default)
              m: minutes
              h: hours
  command: command to execute (or text to send to buffer if command does not start with '/')
  
  Note: command is executed on buffer where /wait was executed (if buffer is not found (for example if it has been closed before execution of command), then command is executed on WeeChat core buffer).
  
  Examples:
    join channel in 10 sec:
      /wait 10 /join #test
    set away in 15 min:
      /wait 15m /away -all I'm away
    say 'hello' in 2 min:
      /wait 2m hello
........................................

&bull; *`/window`* `[list | -1 | +1 | b# | up | down | left | right | splith [pct] | splitv [pct] | resize pct | merge [all] | page_up | page_down | refresh | scroll | scroll_up | scroll_down | scroll_top | scroll_bottom | scroll_previous_highlight | scroll_next_highlight | zoom]`::

........................................
  gestione finestre

           list: list opened windows (no parameter implies this list)
             -1: jump to previous window
             +1: jump to next window
             b#: jump to next window displaying buffer number #
             up: switch to window above current one
           down: switch to window below current one
           left: switch to window on the left
          right: switch to window on the right
         splith: split current window horizontally
         splitv: split current window vertically
         resize: resize window size, new size is <pct> percentage of parent window
          merge: merge window with another (all = keep only one window)
        page_up: scroll one page up
      page_down: scroll one page down
        refresh: refresh screen
         scroll: scroll number of lines (+/-N) or with time: s=seconds, m=minutes, h=hours, d=days, M=months, y=years
      scroll_up: scroll a few lines up
    scroll_down: scroll a few lines down
     scroll_top: scroll to top of buffer
  scroll_bottom: scroll to bottom of buffer
  scroll_previous_highlight: scroll to previous highlight
  scroll_next_highlight: scroll to next highlight
           zoom: zoom on window
  
  For splith and splitv, pct is a percentage which represents size of new window, computed with current window as size reference. For example 25 means create a new window with size = current_size / 4
  
  Examples:
    jump to window displaying buffer #1:
      /window b1
    scroll 2 lines up:
      /window scroll -2
    scroll 2 days up:
      /window scroll -2d
    scroll to beginning of current day:
      /window scroll -d
........................................

