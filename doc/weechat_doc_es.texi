\input texinfo  @c -*-texinfo-*-
@c %**start of header
@setfilename weechat_doc_es.info
@settitle WeeChat - Cliente IRC r@'apido, ligero y extensible
@c %**end of header

@c WeeChat documentation (spanish version)
@c
@c Copyright (c) 2005 by FlashCode <flashcode@flashtux.org>
@c
@c This manual is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2 of the License, or
@c (at your option) any later version.
@c
@c This manual is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with this program; if not, write to the Free Software
@c Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

@c pdf : texi2pdf weechat_doc_es.texi
@c html: makeinfo --html --no-split --number-sections weechat_doc_es.texi

@c tex
@c \overfullrule=0pt
@c end tex

@documentlanguage es
@documentencoding ISO-8859-1

@titlepage

@title WeeChat - Gui@'on de usuario.
@subtitle Cliente IRC r@'apido, peque@~no y extensible
@subtitle Documentaci@'on para WeeChat v0.1.5-cvs - 11 de Septiembre de 2005

@author FlashCode <@email{flashcode@@flashtux.org, flashcode AT flashtux.org}>

@page

Este manual documenta el cliente de IRC WeeChat, y hace parte del proyecto.@*
@*
Puede obtener la @`ultima versi@'on de este documento en la p@'agina:@*
@uref{http://weechat.flashtux.org/doc.php}@*
@*
Copyright @copyright{} 2005 FlashCode
<@email{flashcode@@flashtux.org, flashcode AT flashtux.org}>@*
Traducido en espa@~nol por Iznogoud <@email{iznogoud@@dlfp.org, iznogoud AT dlfp.org}>@*
@*
Puede utilizar este documento seg@'un los t@'erminos de la licencia GNU General Public
License versi@'on 2 o posterior.

@end titlepage

@everyheading @thischapter @| @|
@everyfooting @thistitle @| @| Page @thispage

@contents

@node Top, Introduccion, (dir), (dir)
@menu
* Introduccion:: Presentaci@'on de WeeChat
* Instalacion:: Instalaci@'on de WeeChat
* Uso:: Utilizaci@'on de WeeChat
* Extensiones:: Extensiones de WeeChat
* Autores / Soporte:: Contactar los autores y obtener soporte
@end menu


@c ******************************* Introducci'on *******************************

@node Introduccion, Instalacion, Top, Top
@chapter Introducci@'on
@menu
* Descripcion::
* Requisitos::
@end menu

@node Descripcion, Requisitos, Introduccion, Introduccion
@section Descripci@'on

WeeChat (Wee Enhanced Environment for Chat) es un cliente de IRC libre, r@'apido y de peque@~no tama@~no,
dise@~nado para diferentes sistemas operativos.@*
@*
Las caracter@'isticas principales son las siguientes:
@itemize @minus
@item
conexi@'on multi-servidores (con SSL, IPv6, proxy)
@item
m@'ultiples interfaces: Curses, wxWidgets, Gtk y Qt
@item
peque@~no, r@'apido y ligero.
@item
parametrizable y extensible mediante guiones (scripts)
@item
conforme a las RFCs 1459, 2810, 2811, 2812, y 2813
@item
multi-plataforma (Gnu/Linux, *BSD, MacOS X, Windows y otros sistemas operativos)
@item
100% GPL, con Licencia Libre
@end itemize

@*
La p@'agina Web de WeeChat est@'a aqu@'i (en franc@'es):@*
@uref{http://weechat.flashtux.org}@*

@node Requisitos, , Descripcion, Introduccion
@section Requisitos

Los requisitos para instalar WeeChat son:@*

@itemize @bullet
@item
Un sistema operativo GNU/Linux (con compilador y herramientas asociadas para paquetes de c@'odigo fuente)
@item
Acceso a la cuenta "root" (para instalar WeeChat)
@item
Seg@'un el interfaz, una de las bibliotecas siguientes:
@itemize @minus
@item
Curses: la librer@'ia ncurses,
@item
Gtk: *** interfaz no desarrollada por el momento ***,
@item
Qt: *** interfaz no desarrollada por el momento ***,
@end itemize
@end itemize


@c ******************************* Instalaci@'on *******************************

@node Instalacion, Uso, Introduccion, Top
@chapter Instalaci@'on

@menu
* Paquetes binarios::
* Paquetes de fuentes::
* CVS::
@end menu

@node Paquetes binarios, Paquetes de fuentes, Instalacion, Instalacion
@section Paquetes binarios

Los paquetes binarios est@'an disponibles para las siguientes distribuciones:
@itemize @bullet
@item
Debian (o compatible con Debian)@*
Para instalar WeeChat: @kbd{apt-get install weechat-curses}
@item
Mandrake/Redhat (o cualquier distribuci@'on compatible con los paquetes RPM)@*
Para instalar WeeChat: @kbd{rpm -i /direccion/weechat-x.y.z-1.i386.rpm}
@item
Gentoo@*
Para instalar WeeChat: @kbd{emerge -pf weechat && emerge weechat}
@item
BSD (no disponible !)
@item
Slackware (no disponible!)
@item
Windows (no disponible!)
@end itemize

donde x.y.z es la versi@'on de WeeChat (por ejemplo 0.0.1)
@*

@node Paquetes de fuentes, CVS, Paquetes binarios, Instalacion
@section Paquetes de fuentes

Escribe en un terminal o una consola:@*
@kbd{./configure}@*
@kbd{make}@*
Nota: si quieres construir WeeChat @'unicamente para ciertas interfaces, puedes a@~nadir Par@'ametros a 
./configure, escribe @kbd{./configure --help} para obtener ayuda sobre estas opciones.@*

Adquiere los derechos de root e instala WeeChat:@*
@kbd{su}@*
(introduce la contrase@~na de root)@*
@kbd{make install}@*

@node CVS, , Paquetes de fuentes, Instalacion
@section CVS

Atenci@'on: Las fuentes CVS est@'an reservadas para usuarios con experiencia: Es posible que WeeChat no
se instale o que se sea bastante inestable.
@exclamdown{}Ya te he avisado!@*

Para recuperar las fuentes CVS, escribe las l@'ineas siguientes:@*
@kbd{cvs -d:pserver:anoncvs@@subversions.gnu.org:/cvsroot/weechat login}@*
@kbd{cvs -z3 -d:pserver:anoncvs@@subversions.gnu.org:/cvsroot/weechat co weechat}@*
(Si te pregunta una contrase@~na, simplemente pulsa la tecla Entrar)@*

Ejecuta el script:@*
@kbd{./autogen.sh}@*

Luego, lee las instructiones para Paquetes de fuentes - @xref{Paquetes de fuentes}.


@c ******************************* Utilisaci@'on ********************************

@node Uso, Extensiones, Instalacion, Top
@chapter Uso

@menu
* Iniciar WeeChat::
* Ficheros de configuracion::
* Atajos de teclado::
* Comandos WeeChat::
* Canal FIFO::
@end menu

@node Iniciar WeeChat, Ficheros de configuracion, Uso, Uso
@section Iniciar WeeChat

@subsection Par@'ametros de l@'inea de comandos

@table @code
@item -c, --config
Obtener la ayuda del fichero de configuraci@'on (lista de opciones)@*
@item -f, --key-functions
Display WeeChat internal functions for keys@*
@item -h, --help
Obtener la ayuda@*
@item -i, --irc-commands
Display IRC commands list@*
@item -l, --license
Obtener la licencia de WeeChat@*
@item -v, --version
Obtener la versi@'on de WeeChat@*
@item -w, --weechat-commands
Display WeeChat commands list@*
@end table

@subsection Lanzar WeeChat

Para ejecutar WeeChat, basta escribir la l@'inea siguiente:@*
@kbd{weechat-curses} (para el interfaz con Curses)@*
o @kbd{weechat-wxwidgets} (para el interfaz con wxWidgets)@*
o @kbd{weechat-gtk} (para el interfaz con Gtk)@*
o @kbd{weechat-qt} (para el interfaz con Qt)@*

Cuando se ejecuta WeeChat por primera vez, un fichero de configuraci@'on se crea con las opciones por defecto;@*
El fichero de configuraci@'on por defecto est@'a en: ~/.weechat/weechat.rc@*

Puedes editarlo para configurar WeeChat con las opciones deseadas, o tambi@'en puedes modificar los par@'ametros directamente en WeeChat, con la l@'inea @kbd{/set} - @xref{Comandos WeeChat}.

@node Ficheros de configuracion, Atajos de teclado, Iniciar WeeChat, Uso
@section Ficheros de configuraci@'on

Enumeraci@'on de las opciones del fichero de configuraci@'on:@*

@table @kbd
@item look_set_title
Set title for window (terminal for Curses GUI) with name & version@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_startup_logo
Display WeeChat logo at startup@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_startup_version
Display WeeChat version at startup@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_weechat_slogan
WeeChat slogan (if empty, slogan is not used)@*
Type: string (any string), default value: 'the geekest IRC client!'@*
@item look_charset_decode
Charset for decoding messages from server, examples: UTF-8, ISO-8859-1 (if empty, messages are not converted)@*
Type: string (any string), default value: 'UTF-8'@*
@item look_charset_encode
Charset for encoding messages sent to server, examples: UFT-8, ISO-8859-1 (if empty, local charset is used)@*
Type: string (any string), default value: ''@*
@item look_charset_internal
Internal WeeChat charset, should be ISO-xxxx even if locale is UTF-8 (if empty, local charset is used)@*
Type: string (any string), default value: 'ISO-8859-1'@*
@item look_buffer_timestamp
Timestamp for buffers@*
Type: string (any string), default value: '[%H:%M:%S]'@*
@item look_color_nicks
Display nick names with different colors@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_color_actions
Display actions with different colors@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_remove_colors_from_msgs
Remove colors from incoming messages@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_nicklist
Display nicklist window (for channel windows)@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_nicklist_position
Nicklist position (top, left, right (default), bottom)@*
Type: string (values: 'left', 'right', 'top', 'bottom'), default value: 'right'@*
@item look_nicklist_min_size
Min size for nicklist (width or height, depending on look_nicklist_position (0 = no min size))@*
Type: integer (values: between 0 and 100), default value: 0@*
@item look_nicklist_max_size
Max size for nicklist (width or height, depending on look_nicklist_position (0 = no max size; if min == max and > 0, then size is fixed))@*
Type: integer (values: between 0 and 100), default value: 0@*
@item look_no_nickname
Text to display instead of nick when not connected@*
Type: string (any string), default value: '-cmd-'@*
@item look_nickmode
Display nick mode ((half)op/voice) before each nick@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_nickmode_empty
Display space if nick mode is not (half)op/voice@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item look_nick_completor
The string inserted after nick completion@*
Type: string (any string), default value: ':'@*
@item look_infobar
Enable info bar@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_infobar_timestamp
Timestamp for time in infobar@*
Type: string (any string), default value: '%B, %A %d %Y'@*
@item look_infobar_seconds
Display seconds in infobar time@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item look_infobar_delay_highlight
Delay (in seconds) for highlight messages in infobar (0 = disable highlight notifications in infobar)@*
Type: integer (values: between 0 and 2147483647), default value: 7@*
@item col_title
Color for title bar@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_title_bg
Background for title bar@*
Type: color (Curses or Gtk color), default value: 'blue'@*
@item col_chat
Color for chat text@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_chat_time
Color for time in chat window@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_chat_time_sep
Color for time separator (chat window)@*
Type: color (Curses or Gtk color), default value: 'brown'@*
@item col_chat_prefix1
Color for 1st and 3rd char of prefix@*
Type: color (Curses or Gtk color), default value: 'lightcyan'@*
@item col_chat_prefix2
Color for middle char of prefix@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_chat_join
Color for join arrow (prefix)@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_chat_part
Color for part/quit arrow (prefix)@*
Type: color (Curses or Gtk color), default value: 'lightred'@*
@item col_chat_nick
Color for nicks in actions (chat window)@*
Type: color (Curses or Gtk color), default value: 'lightcyan'@*
@item col_chat_host
Color for hostnames (chat window)@*
Type: color (Curses or Gtk color), default value: 'cyan'@*
@item col_chat_channel
Color for channel names in actions (chat window)@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_chat_dark
Color for dark separators (chat window)@*
Type: color (Curses or Gtk color), default value: 'green'@*
@item col_chat_highlight
Color for highlighted nick (chat window)@*
Type: color (Curses or Gtk color), default value: 'yellow'@*
@item col_chat_bg
Background for chat window@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_status
Color for status bar@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_status_delimiters
Color for status bar delimiters@*
Type: color (Curses or Gtk color), default value: 'cyan'@*
@item col_status_data_msg
Color for window with new messages (status bar)@*
Type: color (Curses or Gtk color), default value: 'yellow'@*
@item col_status_private
Color for window with private message (status bar)@*
Type: color (Curses or Gtk color), default value: 'lightmagenta'@*
@item col_status_highlight
Color for window with highlight (status bar)@*
Type: color (Curses or Gtk color), default value: 'lightred'@*
@item col_status_data_other
Color for window with new data (not messages) (status bar)@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_status_more
Color for window with new data (status bar)@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_status_bg
Background for status window@*
Type: color (Curses or Gtk color), default value: 'blue'@*
@item col_infobar
Color for info bar text@*
Type: color (Curses or Gtk color), default value: 'black'@*
@item col_infobar_delimiters
Color for infobar delimiters@*
Type: color (Curses or Gtk color), default value: 'blue'@*
@item col_infobar_highlight
Color for info bar highlight notification@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_infobar_bg
Background for info bar window@*
Type: color (Curses or Gtk color), default value: 'cyan'@*
@item col_input
Color for input text@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_input_channel
Color for input text (channel name)@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_input_nick
Color for input text (nick name)@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_input_bg
Background for input window@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_nick
Color for nicknames@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_nick_away
Color for away nicknames@*
Type: color (Curses or Gtk color), default value: 'cyan'@*
@item col_nick_chanowner
Color for chan owner symbol (specific to unrealircd)@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_nick_chanadmin
Color for chan admin symbol (specific to unrealircd)@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_nick_op
Color for operator symbol@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_nick_halfop
Color for half-operator symbol@*
Type: color (Curses or Gtk color), default value: 'lightmagenta'@*
@item col_nick_voice
Color for voice symbol@*
Type: color (Curses or Gtk color), default value: 'yellow'@*
@item col_nick_more
Color for '+' when scrolling nicks@*
Type: color (Curses or Gtk color), default value: 'lightmagenta'@*
@item col_nick_sep
Color for nick separator@*
Type: color (Curses or Gtk color), default value: 'blue'@*
@item col_nick_self
Color for local nick@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_nick_private
Color for other nick in private window@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_nick_bg
Background for nicknames@*
Type: color (Curses or Gtk color), default value: 'default'@*
@item col_chat_dcc_selected
Color for selected DCC (chat window)@*
Type: color (Curses or Gtk color), default value: 'white'@*
@item col_dcc_waiting
Color for "waiting" dcc status@*
Type: color (Curses or Gtk color), default value: 'lightcyan'@*
@item col_dcc_connecting
Color for "connecting" dcc status@*
Type: color (Curses or Gtk color), default value: 'yellow'@*
@item col_dcc_active
Color for "active" dcc status@*
Type: color (Curses or Gtk color), default value: 'lightblue'@*
@item col_dcc_done
Color for "done" dcc status@*
Type: color (Curses or Gtk color), default value: 'lightgreen'@*
@item col_dcc_failed
Color for "failed" dcc status@*
Type: color (Curses or Gtk color), default value: 'lightred'@*
@item col_dcc_aborted
Color for "aborted" dcc status@*
Type: color (Curses or Gtk color), default value: 'lightred'@*
@item history_max_lines
Maximum number of lines in history for one server/channel/private window (0 = unlimited)@*
Type: integer (values: between 0 and 2147483647), default value: 4096@*
@item history_max_commands
Maximum number of user commands in history (0 = unlimited)@*
Type: integer (values: between 0 and 2147483647), default value: 100@*
@item log_auto_server
Automatically log server messages@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item log_auto_channel
Automatically log channel chats@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item log_auto_private
Automatically log private chats@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item log_plugin_msg
Log messages from plugins (scripts)@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item log_path
Path for WeeChat log files@*
Type: string (any string), default value: '~/.weechat/logs/'@*
@item log_timestamp
Timestamp for log (see man strftime for date/time specifiers)@*
Type: string (any string), default value: '%Y %b %d %H:%M:%S'@*
@item log_hide_nickserv_pwd
Hide password displayed by nickserv@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item irc_display_away
Display message to all channels when (un)marking as away@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item irc_default_msg_away
Default message when away@*
Type: string (any string), default value: 'away'@*
@item irc_default_msg_part
Default part message (leaving channel)@*
Type: string (any string), default value: 'WeeChat %v'@*
@item irc_default_msg_quit
Default quit message ('%v' will be replaced by WeeChat version in string)@*
Type: string (any string), default value: 'WeeChat %v'@*
@item irc_away_check
Interval between two checks for away (in minutes, 0 = never check)@*
Type: integer (values: between 0 and 2147483647), default value: 0@*
@item irc_lag_check
Interval between two checks for lag (in seconds)@*
Type: integer (values: between 30 and 2147483647), default value: 60@*
@item irc_lag_min_show
Minimum lag to show (in seconds)@*
Type: integer (values: between 0 and 2147483647), default value: 1@*
@item irc_lag_disconnect
Disconnect after important lag (in minutes, 0 = never disconnect)@*
Type: integer (values: between 0 and 2147483647), default value: 5@*
@item irc_fifo_pipe
Create a FIFO pipe for remote control@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item irc_highlight
Comma separated list of words to highlight (case insensitive comparison)@*
Type: string (any string), default value: ''@*
@item dcc_auto_accept_files
Automatically accept incoming dcc files@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item dcc_auto_accept_chats
Automatically accept dcc chats (use carefully!)@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item dcc_timeout
Timeout for dcc request (in seconds)@*
Type: integer (values: between 1 and 2147483647), default value: 300@*
@item dcc_blocksize
Block size for dcc packets in bytes (default: 65536)@*
Type: integer (values: between 1024 and 102400), default value: 65536@*
@item dcc_download_path
Path for writing incoming files with dcc (default: user home)@*
Type: string (any string), default value: '~'@*
@item dcc_upload_path
Path for reading files when sending thru dcc (when no path is specified)@*
Type: string (any string), default value: '~'@*
@item dcc_convert_spaces
Convert spaces to underscores when sending files@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item dcc_auto_rename
Rename incoming files if already exists (add '.1', '.2', ...)@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item dcc_auto_resume
Automatically resume dcc transfer if connection with remote host is loosed@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item proxy_use
Use a proxy server to connect to irc server@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item proxy_type
Proxy type (http (default), socks4, socks5)@*
Type: string (values: 'http', 'socks4', 'socks5'), default value: 'http'@*
@item proxy_ipv6
Connect to proxy in ipv6@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item proxy_address
Proxy server address (IP or hostname)@*
Type: string (any string), default value: ''@*
@item proxy_port
Port for connecting to proxy server@*
Type: integer (values: between 0 and 65535), default value: 3128@*
@item proxy_username
Username for proxy server@*
Type: string (any string), default value: ''@*
@item proxy_password
Password for proxy server@*
Type: string (any string), default value: ''@*
@item server_name
Name associated to IRC server (for display only)@*
Type: string (any string), default value: ''@*
@item server_autoconnect
Automatically connect to server when WeeChat is starting@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item server_autoreconnect
Automatically reconnect to server when disconnected@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item server_autoreconnect_delay
Delay (in seconds) before trying again to reconnect to server@*
Type: integer (values: between 0 and 65535), default value: 30@*
@item server_address
IP address or hostname of IRC server@*
Type: string (any string), default value: ''@*
@item server_port
Port for connecting to server@*
Type: integer (values: between 0 and 65535), default value: 6667@*
@item server_ipv6
Use IPv6 protocol for server communication@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item server_ssl
Use SSL for server communication@*
Type: boolean (values: 'on' or 'off'), default value: 'off'@*
@item server_password
Password for IRC server@*
Type: string (any string), default value: ''@*
@item server_nick1
Nickname to use on IRC server@*
Type: string (any string), default value: ''@*
@item server_nick2
Alternate nickname to use on IRC server (if nickname is already used)@*
Type: string (any string), default value: ''@*
@item server_nick3
2nd alternate nickname to use on IRC server (if alternate nickname is already used)@*
Type: string (any string), default value: ''@*
@item server_username
User name to use on IRC server@*
Type: string (any string), default value: ''@*
@item server_realname
Real name to use on IRC server@*
Type: string (any string), default value: ''@*
@item server_command
First command to run when connected to server@*
Type: string (any string), default value: ''@*
@item server_command_delay
Delay (in seconds) after command was executed (example: give some time for authentication)@*
Type: integer (values: between 0 and 5), default value: 0@*
@item server_autojoin
Comma separated list of channels to join when connected to server (example: "#chan1,#chan2,#chan3 #key1,#key2")@*
Type: string (any string), default value: ''@*
@item server_autorejoin
Automatically rejoin channels when kicked@*
Type: boolean (values: 'on' or 'off'), default value: 'on'@*
@item server_notify_levels
Comma separated list of notify levels for channels of this server (format: #channel:1,..)@*
Type: string (any string), default value: ''@*
@end table

Los colores para el interfaz Curses son:@*
@itemize @minus
@item
@kbd{default}: color por defecto (con transparencia para el fondo)
@item
@kbd{black}: negro
@item
@kbd{red}: rojo oscuro
@item
@kbd{lightred}: rojo claro
@item
@kbd{green}: verde oscuro
@item
@kbd{lightgreen}: verde claro
@item
@kbd{brown}: marr@'on
@item
@kbd{yellow}: amarillo
@item
@kbd{blue}: azul oscuro
@item
@kbd{lightblue}: azul claro
@item
@kbd{magenta}: violeta oscuro
@item
@kbd{lightmagenta}: violeta claro
@item
@kbd{cyan}: cyan oscuro
@item
@kbd{lightcyan}: cyan claro
@item
@kbd{white}: blanco
@end itemize

@node Atajos de teclado, Comandos WeeChat, Ficheros de configuracion, Uso
@section Atajos de teclado

@table @kbd
@item Flecha izquierda / Flecha derecha
Ir a la letra anterior / siguiente en la l@'inea de comandos@*
@*
@item Ctrl + flecha izquierda / Ctrl + flecha derecha
Ir a la palabra anterior / siguiente en la l@'inea de comandos@*
@*
@item Inicio / Ctrl + A
Ir al inicio de la l@'inea de comandos@*
@*
@item Fin / Ctrl + E
Ir al final de la l@'inea de comandos@*
@*
@item Ctrl + K
Delete until end of line@*
@*
@item Ctrl + L
Refrescar toda la ventana@*
@*
@item Ctrl + U
Delete until beginning of line@*
@*
@item Ctrl + W
Borrar la palabra anterior en la l@'inea de comandos@*
@*
@item Backspace / Supr
Borrar el caracter anterior / siguiente en la l@'inea de comandos@*
@*
@item Tab
Completar el comando o el seud@'onimo (@kbd{Tab} de nuevo: encontrar la pr@'oxima autocompletaci@'on)@*
@*
@item Cualquier caracter
A@~nadir la letra en la posici@'on del cursor en la l@'inea de comandos@*
@*
@item Entrar
Ejecutar la l@'inea de comandos o enviar el mensaje@*
@*
@item Flecha de arriba / Flecha de abajo
Mostrar los @'ultimos comandos/mensajes@*
@*
@item Ctrl + up arrow / Ctrl + down arrow
Call again last commands/messages in global history@*
@*
@item PageUp / PageDown
Obtener el hist@'orico de la memoria temporal (buffer)@*
@*
@item F5 / F6
Ir a la memoria temporal anterior / siguiente@*
@*
@item F7 / F8
Ir a la ventana anterior / siguiente@*
@*
@item F10
Borrar el @'ultimo mensaje en la barra de informaciones@*
@*
@item F11 / F12
Scroll nicklist@*
@*
@item Alt + flecha izquierda / Alt + flecha derecha
Como F5 / F6@*
@*
@item Alt + A
Ir a la memoria temporal donde hay actividad (con el orden de prioridad siguiente: resaltado, mensaje, otros)@*
@*
@item Alt + B
Go to previous word@*
@*
@item Alt + D
Delete next word@*
@*
@item Alt + F
Go to next word@*
@*
@item Alt + H
Borrar la 'hotlist' (notificaci@'on de actividad en otras memorias temporales)@*
@*
@item Alt + J then Alt + D
Obtener la lista de DCC actual@*
@*
@item Alt + J then Alt + L
Switch to last buffer@*
@*
@item Alt + J then Alt + S
Ir a la memoria temporal del servidor@*
@*
@item Alt + J then Alt + X
Ir al primer canal del servidor siguiente (o a la memoria temporal del servidor si ning@'un canal est@'a abierto)@*
@*
@item Alt + (1-9)
Saltar a la memoria temporal con ese n@'umero@*
@*
@item Alt + J then number (01-99)
Saltar a la memoria temporal con ese n@'umero@*
@*
@item Alt + K
Grab a key
@*
@item Alt + R
Delete entire line@*
@*
@item Alt + PageUp / Alt + PageDown / Alt + Home / Alt + End
Scroll nicklist@*
@*
@end table

@node Comandos WeeChat, Canal FIFO, Atajos de teclado, Uso
@section Comandos WeeChat

Comandos internos WeeChat:@*

@table @kbd
@item alias  [alias_name [command [arguments]]
@*
create an alias for a command@*
@*
alias_name: name of alias@*
command: command name (WeeChat or IRC command, without first '/')@*
arguments: arguments for command@*
@*
@item buffer  [action | number]
@*
manage buffers@*
@*
action: action to do:@*
  move: move buffer in the list (may be relative, for example -1)@*
  close: close buffer (for channel: same as /part without part message)@*
  list: list opened buffers (no parameter implies this list)@*
  notify: set notify level for buffer (0=never, 1=highlight, 2=1+msg, 3=2+join/part)@*
number: jump to buffer by number@*
@*
@item clear  [-all]
@*
clear window(s)@*
@*
-all: clear all windows@*
@*
@item connect  [servername]
@*
connect to a server@*
@*
servername: server name to connect@*
@*
@item disconnect  [servername]
@*
disconnect from a server@*
@*
servername: server name to disconnect@*
@*
@item debug  dump
@*
print debug messages@*
@*
dump: save memory dump in WeeChat log file (same dump is written when WeeChat crashes)@*
@*
@item help  [command]
@*
display help about commands@*
@*
command: name of a WeeChat or IRC command@*
@*
@item ignore  [mask [[type | command] [channel [server]]]]
@*
ignore IRC messages and/or hosts@*
@*
   mask: nick or host mask to ignore@*
   type: type of message to ignore (action, ctcp, dcc, pv)@*
command: IRC command@*
channel: name of channel for ignore@*
 server: name of server for ignore@*
@*
For each argument, '*' means all.@*
Without argument, /ignore command lists all defined ignore.@*
@*
@item key  [key function/command] [unbind key] [functions] [reset -yes]
@*
bind/unbind keys@*
@*
key: bind this key to an internal function or a command (beginning by "/")@*
unbind: unbind a key (if "all", default bindings are restored)@*
functions: list internal functions for key bindings@*
reset: restore bindings to the default values and delete ALL personal binding (use carefully!)@*
@*
@item perl  [load filename] | [autoload] | [reload] | [unload]
@*
list/load/unload Perl scripts@*
@*
filename: Perl script (file) to load@*
@*
Without argument, /perl command lists all loaded Perl scripts.@*
@*
@item python  [load filename] | [autoload] | [reload] | [unload]
@*
list/load/unload Python scripts@*
@*
filename: Python script (file) to load@*
@*
Without argument, /python command lists all loaded Python scripts.@*
@*
@item ruby  [load filename] | [autoload] | [reload] | [unload]
@*
list/load/unload Ruby scripts@*
@*
filename: Ruby script (file) to load@*
@*
Without argument, /ruby command lists all loaded Ruby scripts.@*
@*
@item server  [servername] | [servername hostname port [-auto | -noauto] [-ipv6] [-ssl] [-pwd password] [-nicks nick1 [nick2 [nick3]]] [-username username] [-realname realname] [-command command] [-autojoin channel[,channel]] ] | [del servername]
@*
list, add or remove servers@*
@*
servername: server name, for internal & display use@*
hostname: name or IP address of server@*
port: port for server (integer)@*
ipv6: use IPv6 protocol@*
ssl: use SSL protocol@*
password: password for server@*
nick1: first nick for server@*
nick2: alternate nick for server@*
nick3: second alternate nick for server@*
username: user name@*
realname: real name of user@*
@*
@item save  [file]
@*
save config to disk@*
@*
file: filename for writing config@*
@*
@item set  [option[=value]]
@*
set config parameters@*
@*
option: name of an option@*
value: value for option@*
@*
@item unalias  alias_name
@*
remove an alias@*
@*
alias_name: name of alias to remove@*
@*
@item unignore  [number | [mask [[type | command] [channel [server]]]]]
@*
unignore IRC messages and/or hosts@*
@*
 number: # of ignore to unignore (number is displayed by list of ignore)@*
   mask: nick or host mask to unignore@*
   type: type of message to unignore (action, ctcp, dcc, pv)@*
command: IRC command@*
channel: name of channel for unignore@*
 server: name of server for unignore@*
@*
For each argument, '*' means all.@*
Without argument, /unignore command lists all defined ignore.@*
@*
@item window  [list | splith | splitv | [merge [down | up | left | right | all]]]
@*
manage windows@*
@*
list: list opened windows (no parameter implies this list)@*
splith: split current window horizontally@*
splitv: split current window vertically@*
merge: merge window with another@*
@*
@end table

Comandos IRC:@*

@table @kbd
@item admin  [target]
@*
find information about the administrator of the server@*
@*
target: server@*
@*
@item amsg  text
@*
send message to all channels of all connected servers@*
@*
text: text to send@*
@*
@item away  [-all] [message]
@*
toggle away status@*
@*
-all: toggle away status on all connected servers@*
message: message for away (if no message is given, away status is removed)@*
@*
@item ban  [channel] [nickname [nickname ...]]
@*
bans nicks or hosts@*
@*
channel: channel for ban@*
nickname: user or host to ban@*
@*
@item ctcp  nickname type [arguments]
@*
send a CTCP message (Client-To-Client Protocol)@*
@*
nickname: user to send CTCP to@*
type: CTCP type (examples: "version", "ping", ..)@*
arguments: arguments for CTCP@*
@*
@item dcc  action [nickname [file]]
@*
starts DCC (file or chat) or close chat@*
@*
action: 'send' (file) or 'chat' or 'close' (chat)@*
nickname: nickname to send file or chat@*
file: filename (on local host)@*
@*
@item dehalfop  [nickname [nickname]]
@*
removes half channel operator status from nickname(s)@*
@*
@item deop  [nickname [nickname]]
@*
removes channel operator status from nickname(s)@*
@*
@item devoice  [nickname [nickname]]
@*
removes voice from nickname(s)@*
@*
@item die
@*
shutdown the server@*
@*
@item halfop  [nickname [nickname]]
@*
gives half channel operator status to nickname(s)@*
@*
@item info  [target]
@*
get information describing the server@*
@*
target: server name@*
@*
@item invite  nickname channel
@*
invite a nick on a channel@*
@*
nickname: nick to invite@*
channel: channel to invite@*
@*
@item ison  nickname [nickname ...]
@*
check if a nickname is currently on IRC@*
@*
nickname: nickname@*
@*
@item join  channel[,channel] [key[,key]]
@*
join a channel@*
@*
channel: channel name to join@*
key: key to join the channel@*
@*
@item kick  [channel] nickname [comment]
@*
forcibly remove a user from a channel@*
@*
channel: channel where user is@*
nickname: nickname to kick@*
comment: comment for kick@*
@*
@item kickban  [channel] nickname [comment]
@*
kicks and bans a nick from a channel@*
@*
channel: channel where user is@*
nickname: nickname to kick and ban@*
comment: comment for kick@*
@*
@item kill  nickname comment
@*
close client-server connection@*
@*
nickname: nickname@*
comment: comment for kill@*
@*
@item links  [[server] server_mask]
@*
list all servernames which are known by the server answering the query@*
@*
server: this server should answer the query@*
server_mask: list of servers must match this mask@*
@*
@item list  [channel[,channel] [server]]
@*
list channels and their topic@*
@*
channel: channel to list@*
server: server name@*
@*
@item lusers  [mask [target]]
@*
get statistics about the size of the IRC network@*
@*
mask: servers matching the mask only@*
target: server for forwarding request@*
@*
@item me  message
@*
send a ctcp action to the current channel@*
@*
message: message to send@*
@*
@item mode  @{ channel @{[+|-]|o|p|s|i|t|n|b|v@} [limit] [user] [ban mask] @} | @{ nickname @{[+|-]|i|w|s|o@} @}
@*
change channel or user mode@*
@*
channel modes:@*
  channel: channel name to modify@*
  o: give/take channel operator privileges@*
  p: private channel flag@*
  s: secret channel flag@*
  i: invite-only channel flag@*
  t: topic settable by channel operator only flag@*
  n: no messages to channel from clients on the outside@*
  m: moderated channel@*
  l: set the user limit to channel@*
  b: set a ban mask to keep users out@*
  v: give/take the ability to speak on a moderated channel@*
  k: set a channel key (password)@*
user modes:@*
  nickname: nickname to modify@*
  i: mark a user as invisible@*
  s: mark a user for receive server notices@*
  w: user receives wallops@*
  o: operator flag@*
@*
@item motd  [target]
@*
get the "Message Of The Day"@*
@*
target: server name@*
@*
@item msg  receiver[,receiver] text
@*
send message to a nick or channel@*
@*
receiver: nick or channel (may be mask, '*' = current channel)@*
text: text to send@*
@*
@item names  [channel[,channel]]
@*
list nicknames on channels@*
@*
channel: channel name@*
@*
@item nick  [-all] nickname
@*
change current nickname@*
@*
-all: set new nickname for all connected servers@*
nickname: new nickname@*
@*
@item notice  nickname text
@*
send notice message to user@*
@*
nickname: user to send notice to@*
text: text to send@*
@*
@item op  nickname [nickname]
@*
gives channel operator status to nickname(s)@*
@*
@item oper  user password
@*
get operator privileges@*
@*
user/password: used to get privileges on current IRC server@*
@*
@item part  [channel[,channel]] [part_message]
@*
leave a channel@*
@*
channel: channel name to leave@*
part_message: part message (displayed to other users)@*
@*
@item ping  server1 [server2]
@*
ping server@*
@*
server1: server to ping@*
server2: forward ping to this server@*
@*
@item pong  daemon [daemon2]
@*
answer to a ping message@*
@*
daemon: daemon who has responded to Ping message@*
daemon2: forward message to this daemon@*
@*
@item query  nickname [text]
@*
send a private message to a nick@*
@*
nickname: nickname for private conversation@*
text: text to send@*
@*
@item quit  [quit_message]
@*
close all connections & quit@*
@*
quit_message: quit message (displayed to other users)@*
@*
@item quote  data
@*
send raw data to server without parsing@*
@*
data: raw data to send@*
@*
@item rehash
@*
tell the server to reload its config file@*
@*
@item restart
@*
tell the server to restart itself@*
@*
@item service  nickname reserved distribution type reserved info
@*
register a new service@*
@*
distribution: visibility of service@*
type: reserved for future usage@*
@*
@item servlist  [mask [type]]
@*
list services currently connected to the network@*
@*
mask: list only services matching this mask@*
type: list only services of this type@*
@*
@item squery  service text
@*
deliver a message to a service@*
@*
service: name of service@*
text: text to send@*
@*
@item squit  server comment
@*
disconnect server links@*
@*
server: server name@*
comment: comment for quit@*
@*
@item stats  [query [server]]
@*
query statistics about server@*
@*
query: c/h/i/k/l/m/o/y/u (see RFC1459)@*
server: server name@*
@*
@item summon  user [target [channel]]
@*
give users who are on a host running an IRC server a message asking them to please join IRC@*
@*
user: username@*
target: server name@*
channel: channel name@*
@*
@item time  [target]
@*
query local time from server@*
@*
target: query time from specified server@*
@*
@item topic  [channel] [topic]
@*
get/set channel topic@*
@*
channel: channel name@*
topic: new topic for channel (if topic is "-delete" then topic is deleted)@*
@*
@item trace  [target]
@*
find the route to specific server@*
@*
target: server@*
@*
@item unban  [channel] nickname [nickname ...]
@*
unbans nicks or hosts@*
@*
channel: channel for unban@*
nickname: user or host to unban@*
@*
@item userhost  nickname [nickname ...]
@*
return a list of information about nicknames@*
@*
nickname: nickname@*
@*
@item users  [target]
@*
list of users logged into the server@*
@*
target: server@*
@*
@item version  [server | nickname]
@*
gives the version info of nick or server (current or specified)@*
@*
server: server name@*
nickname: nickname@*
@*
@item voice  [nickname [nickname]]
@*
gives voice to nickname(s)@*
@*
@item wallops  text
@*
send a message to all currently connected users who have set the 'w' user mode for themselves@*
@*
text to send@*
@*
@item who  [mask ["o"]]
@*
generate a query which returns a list of information@*
@*
mask: only information which match this mask@*
o: only operators are returned according to the mask supplied@*
@*
@item whois  [server] nickname[,nickname]
@*
query information about user(s)@*
@*
server: server name@*
nickname: nickname (may be a mask)@*
@*
@item whowas  nickname [,nickname [,nickname ...]] [count [target]]
@*
ask for information about a nickname which no longer exists@*
@*
nickname: nickname to search@*
count: number of replies to return (full search if negative number)@*
target: reply should match this mask@*
@*
@end table

Internal functions for keys:@*

@table @kbd
@item return
terminate line@*
@item tab
complete word@*
@item backspace
delete previous char@*
@item delete
delete next char@*
@item delete_end_line
delete until end of line@*
@item delete_beginning_line
delete until beginning of line@*
@item delete_line
delete entire line@*
@item delete_previous_word
delete previous word@*
@item delete_next_word
delete next word@*
@item clipboard_paste
paste current clipboard content@*
@item transpose_chars
transpose chars@*
@item home
go to beginning of line@*
@item end
go to end of line@*
@item left
move one char left@*
@item previous_word
move to previous word@*
@item right
move one char right@*
@item next_word
move to next word@*
@item up
call previous command in history@*
@item up_global
call previous command in global history@*
@item down
call next command in history@*
@item down_global
call next command in global history@*
@item page_up
scroll one page up@*
@item page_down
scroll one page down@*
@item infobar_clear
clear infobar@*
@item nick_page_up
scroll nicklist one page up@*
@item nick_page_down
scroll nicklist one page down@*
@item nick_beginning
display beginning of nicklist@*
@item nick_end
display end of nicklist@*
@item refresh
refresh screen@*
@item jump_smart
jump to buffer with activity@*
@item jump_dcc
jump to DCC buffer@*
@item jump_last_buffer
jump to last buffer@*
@item jump_server
jump to server buffer@*
@item jump_next_server
jump to next server@*
@item hotlist_clear
clear hotlist@*
@item grab_key
grab a key@*
@end table

@node Canal FIFO, , Comandos WeeChat, Uso
@section Canal FIFO

Puedes controlar WeeChat a distantia, enviando comandos o texto a un canal FIFO
(debes activar la opci@'on "irc_fifo_pipe" que est@'a desactivada por defecto).@*
El canal FIFO est@'a dentro del directorio ~/.weechat/ y se llama
"weechat_fifo_xxxxx" (donde xxxxx es el ID del proceso (PID) de WeeChat).@*
Entonces si tienes varios WeeChat que se est@'an ejecutando, tendr@'as varios
canales FIFO, uno por cada sesi@'on.@*
@*
La sintaxis para enviar comandos o texto dentro del canal FIFO es la siguiente:@*
@command{servidor,canal *texto o comando aqu@'i}@*
donde el serviros y el canal son opcionales pero si precisa el canal, debes
precisar tambi@'en el servidor.@*
@*
Algunos ejemplos:
@table @asis
@item @bullet{} cambiar el seud@'onimo en freenode por "mynick|out":
@*
@command{echo "freenode */nick mynick|out" >~/.weechat/weechat_fifo_12345}
@*
@item @bullet{} escribir texto en el canal #weechat:
@*
@command{echo "freenode,#weechat *@exclamdown{}Hola a todos!" >~/.weechat/weechat_fifo_12345}
@*
@item @bullet{} escribir texto en el canal corriente (el que se puede visualizar en WeeChat actualmente)
@*
@command{echo "*@exclamdown{}Hola!" >~/.weechat/weechat_fifo_12345}
@*
@b{Advertencia:} esto es peligroso y no deber@'ias hacerlo.. salvo si lo que est@'as haciendo.
@*
@item @bullet{} enviar dos comandos para descargar y recargar los scripts Perl (tienes que separarlos con un \n):
@*
@command{echo -e "freenode */perl unload\nfreenode */perl autoload" >~/.weechat/weechat_fifo_12345}
@end table
@*
Puedes escribir un script que envia los comandos a todos los programas WeeChat
que se est@'an ejecutando de momento. Por ejemplo:@*
@verbatim
 #!/bin/sh
 if [ $# -eq 1 ]; then
     for fifo in $(/bin/ls ~/.weechat/weechat_fifo_* 2>/dev/null); do
         echo -e "$1" >$fifo
     done
 fi
@end verbatim
@*
Si el script se llama "auto_weechat_command", puedes ejecutarlo hac@'i:@*
@command{./auto_weechat_command "freenode,#weechat *Hola"}


@c ******************************* Extensions *********************************

@node Extensiones, Autores / Soporte, Uso, Top
@chapter Extensiones

@menu
* Programas Perl::
* Programas Python::
* Programas Ruby::
@end menu

@node Programas Perl, Programas Python, Extensiones, Extensiones
@section Programas Perl

@subsection Cargar/descargar programas Perl

Los programas Perl se cargan y descargan con el comando @command{/perl}
(escribiendo @kbd{/help perl} en WeeChat para obtener la ayuda acerca del comando).@*

@emph{Ejemplos:}@*
@itemize @bullet
@item
Cargar un programa Perl: @kbd{/perl load /tmp/ejemplo.pl}@*
@item Descargar todos los programas Perl: @kbd{/perl unload}@*
@item
Listar los programas Perl cargados: @kbd{/perl}@*
@end itemize

@subsection Interfaz WeeChat / Perl

@itemize @bullet
@item
@command{weechat::register ( nombre, versi@'on, funci@'on_final, descripci@'on );}@*
@*
Es la primera funci@'on a la que llamar en el programa Perl.@*
Todos los programas en Perl para WeeChat deben llamar esta funci@'on.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre @'unico para identificar el programa (cada programa debe
tener un nombre distinto)
@item @option{versi@'on}: versi@'on del programa
@item @option{funci@'on_final}: funci@'on Perl llamada cuando el programa finaliza
(par@'ametro facultativo, una cadena llena significa que no hay ninguna funci@'on que llamar)
@item @option{descripci@'on}: descripci@'on breve del programa
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat::register ("ejemplo", "1.0", "fin_ejemplo", "programa de ejemplo...");}@*
@*

@item
@command{weechat::print ( mensaje, [canal, [servidor]] );}@*
@*
Escribe un mensaje en un canal.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{mensaje}: mensaje a escribir
@item @option{canal}: nombre del canal
@item @option{servidor}: (opcional) nombre interno del servidor
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat::print ("mensaje");}@*
@code{weechat::print ("mensaje", "#weechat");}@*
@code{weechat::print ("mensaje", "#weechat", "freenode");}@*
@*

@item
@command{weechat::print_infobar ( retraso, mensaje );}@*
@*
Escribir un mensaje en la barra de informaciones.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{plazo}: periodo en segundo durante el cual se mostrar@'a el mensaje
(si es 0, el mensaje no se borrar@'a).
@item @option{message}: mensaje que se escribir@'a en la barra de informaciones.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat::print_infobar (5, "mensaje");}@*
@*

@item
@command{weechat::add_message_handler ( nombre, funci@'on );}@*
@*
Adjunta una funci@'on Perl a un mensaje IRC.@*
Se llamar@'a a la funci@'on cada vez que el mensaje IRC se reciba.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre del mensaje IRC que producir@'a la llamada a la funci@'on.@*
Para saber qu@'e tipo de mensajes IRC existen puede leer las 
RFC 1459 y/o 2812:@*
RFC 1459: @uref{ftp://ftp.rfc-editor.org/in-notes/rfc1459.txt}@*
RFC 2812: @uref{ftp://ftp.rfc-editor.org/in-notes/rfc2812.txt}
@item @option{funci@'on}: funci@'on en Perl llamada cuando se reciba el mensaje.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat::add_message_handler ("privmsg", mi_funcion);}@*
@code{sub mi_funcion}@*
@code{@{ }@*
@code{@ @ @ @ weechat::print ("serveur=$_[0]\n");}@*
@code{@ @ @ @ ($null, $canal, $mensaje) = split ":",$_[1],3;}@*
@code{@ @ @ @ ($mascara, $null, $canal) = split " ", $canal;}@*
@code{@ @ @ @ weechat::print ("masc=$mascara, canal=$canal, msj=$mensaje\n");}@*
@code{@} }@*
@*

@item
@command{weechat::add_command_handler ( nombre, funci@'on );}@*
@*
A@~nadir un nuevo comando WeeChat, con un enlace a una funci@'on en Perl.@*
Se llamar@'a a la funci@'on cuando el usuario lance el comando con @kbd{/nombre}.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre del nuevo comando@*
Puede ser un comando que ya existe, y en este caso el nuevo comando sustituir@'a
el antiguo. Ten cuidado cuando sustituyas a un comando de WeeChat, no podr@'a acceder 
al antiguo comando si el script Perl est@'a cargado.
@item @option{funcion}: funci@'on Perl assiciada al comando.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat::add_command_handler ("comando", mi_comando);}@*
@code{sub mi_comando}@*
@code{@{ }@*
@code{@ @ @ @ weechat::print("Servidor: $_[0], Par@'ametros: $_[1]\n");}@*
@code{@ @ @ @ return 0;}@*
@code{@} }@*
@*

@item
@command{weechat::command ( command, [channel, [server]] );}@*
@*
Execute a command or send a message to a channel.@*

@emph{Arguments:}
@itemize @minus
@item @option{command}: command to execute (or message to send in a channel)
@item @option{channel}: name of channel
@item @option{server}: internal name of server
@end itemize
@*
@emph{Examples:}@*
@code{weechat::command ("hello world!");}@*
@code{weechat::command ("/kick toto please leave this chan", "#weechat");}@*
@code{weechat::command ("/nick newnick", "", "freenode");}@*
@*

@item
@command{weechat::get_info ( nombre, [servidor] );}@*
@*
Obtener informaciones distintas sobre WeeChat, el servidor o el usuario.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre de la informaci@'on que se quiere obtener:
@item @option{servidor}: nombre interno del servidor
@itemize @minus
@item @option{0 o version}: obtener la versi@'on de WeeChat
@item @option{1 o nick}: obtener el seud@'onimo
@item @option{2 o channel}: obtener el nombre del canal
@item @option{3 o server}: obtener el nombre del servidor
@item @option{4 o weechatdir}: obtener el directorio home de WeeChat
@item @option{5 o away}: obtener la informaci@'on "away" del servidor
@end itemize
@end itemize
@*
@emph{Ejemplos:}@*
@code{$version = weechat::get_info("version");}@*
@code{$nick = weechat::get_info("nick", "freenode");}@*
@*

@end itemize

@node Programas Python, Programas Ruby, Programas Perl, Extensiones
@section Programas Python

@subsection Cargar/descargar programas Python

Los programas Python se cargan y descargan con el comando @command{/python}
(escribiendo @kbd{/help python} en WeeChat para obtener la ayuda acerca del comando).@*

@emph{Ejemplos:}@*
@itemize @bullet
@item
Cargar un programa Python: @kbd{/python load /tmp/ejemplo.py}@*
@item Descargar todos los programas Python: @kbd{/python unload}@*
@item
Listar los programas Python cargados: @kbd{/python}@*
@end itemize

@subsection Interfaz WeeChat / Python

@itemize @bullet
@item
@command{weechat.register ( nombre, versi@'on, funci@'on_final, descripci@'on )}@*
@*
Es la primera funci@'on a la que llamar en el programa Python.@*
Todos los programas en Python para WeeChat deben llamar esta funci@'on.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre @'unico para identificar el programa (cada programa debe
tener un nombre distinto)
@item @option{versi@'on}: versi@'on del programa
@item @option{funci@'on_final}: funci@'on Python llamada cuando el programa finaliza
(par@'ametro facultativo, una cadena llena significa que no hay ninguna funci@'on que llamar)
@item @option{descripci@'on}: descripci@'on breve del programa
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat.register ("ejemplo", "1.0", "fin_ejemplo", "programa de ejemplo...")}@*
@*

@item
@command{weechat.prnt ( mensaje, [canal, [servidor]] )}@*
@*
Escribe un mensaje en un canal.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{mensaje}: mensaje a escribir
@item @option{canal}: nombre del canal
@item @option{servidor}: (opcional) nombre interno del servidor
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat.prnt ("mensaje")}@*
@code{weechat.prnt ("mensaje", "#weechat")}@*
@code{weechat.prnt ("mensaje", "#weechat", "freenode")}@*
@*

@item
@command{weechat.print_infobar ( retraso, mensaje )}@*
@*
Escribir un mensaje en la barra de informaciones.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{retraso}: periodo en segundo durante el cual se mostrar@'a el mensaje
(si es 0, el mensaje no se borrar@'a).
@item @option{mensaje}: mensaje que se escribir@'a en la barra de informaciones.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat.print_infobar (5, "mensaje")}@*
@*

@item
@command{weechat.add_message_handler ( nombre, funci@'on )}@*
@*
Adjunta una funci@'on Python a un mensaje IRC.@*
Se llamar@'a a la funci@'on cada vez que el mensaje IRC se reciba.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre del mensaje IRC que producir@'a la llamada a la funci@'on.@*
Para saber qu@'e tipo de mensajes IRC existen puede leer las 
RFC 1459 y/o 2812:@*
RFC 1459: @uref{ftp://ftp.rfc-editor.org/in-notes/rfc1459.txt}@*
RFC 2812: @uref{ftp://ftp.rfc-editor.org/in-notes/rfc2812.txt}
@item @option{funci@'on}: funci@'on en Python llamada cuando se reciba el mensaje.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat.add_message_handler ("privmsg", mi_funcion)}@*
@code{def mi_funcion(servidor, args):}@*
@code{@ @ @ @ weechat.prnt("servidor="+servidor)}@*
@code{@ @ @ @ null, canal, mensaje = string.split(args, ":", 2)}@*
@code{@ @ @ @ mascara, null, canal = string.split(string.strip(canal), " ", 2)}@*
@code{@ @ @ @ weechat.prnt("masc="+mascara+", canal="+canal+", msj="+mensaje)}@*
@*

@item
@command{weechat.add_command_handler ( nombre, funci@'on )}@*
@*
A@~nadir un nuevo comando WeeChat, con un enlace a una funci@'on en Python.@*
Se llamar@'a a la funci@'on cuando el usuario lance el comando con @kbd{/nombre}.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre del nuevo comando@*
Puede ser un comando que ya existe, y en este caso el nuevo comando sustituir@'a
el antiguo. Ten cuidado cuando sustituyas a un comando de WeeChat, no podr@'a acceder 
al antiguo comando si el script Python est@'a cargado.
@item @option{funcion}: funci@'on Python assiciada al comando.
@end itemize
@*
@emph{Ejemplo:}@*
@code{weechat.add_command_handler ("comando", mi_comando)}@*
@code{def mi_comando(servidor, args):}@*
@code{@ @ @ @ weechat.prnt("Servidor:"+servidor+" Par@'ametros:"+args)}@*
@*

@item
@command{weechat.command ( command, [channel, [server]] )}@*
@*
Execute a command or send a message to a channel.@*

@emph{Arguments:}
@itemize @minus
@item @option{command}: command to execute (or message to send in a channel)
@item @option{channel}: name of channel
@item @option{server}: internal name of server
@end itemize
@*
@emph{Examples:}@*
@code{weechat.command ("hello world!")}@*
@code{weechat.command ("/kick toto please leave this chan", "#weechat")}@*
@code{weechat.command ("/nick newnick", "", "freenode")}@*
@*

@item
@command{weechat.get_info ( nombre, [servidor] )}@*
@*
Obtener informaciones distintas sobre WeeChat, el servidor o el usuario.@*

@emph{Par@'ametros:}
@itemize @minus
@item @option{nombre}: nombre de la informaci@'on que se quiere obtener:
@item @option{servidor}: nombre interno del servidor
@itemize @minus
@item @option{0 o version}: obtener la versi@'on de WeeChat
@item @option{1 o nick}: obtener el seud@'onimo
@item @option{2 o channel}: obtener el nombre del canal
@item @option{3 o server}: obtener el nombre del servidor
@item @option{4 o weechatdir}: obtener el directorio home de WeeChat
@item @option{5 o away}: obtener la informaci@'on "away" del servidor
@end itemize
@end itemize
@*
@emph{Ejemplos:}@*
@code{$version = weechat.get_info("version")}@*
@code{$nick = weechat.get_info("nick", "freenode")}@*
@*

@end itemize

@node Programas Ruby, , Programas Python, Extensiones
@section Programas Ruby

@exclamdown{}No desarrollado!

@c **************************** Autores / Soporte *****************************

@node Autores / Soporte, , Extensiones, Top
@chapter Autores / Soporte

@ifhtml
@menu
* Autores::
* Obtener soporte/ayuda::
* Copyright::
@end menu
@end ifhtml
@ifnothtml
@menu
* Autores::
* Obtener soporte/ayuda::
@end menu
@end ifnothtml

@node Autores, Obtener soporte/ayuda, Autores / Soporte, Autores / Soporte
@section Autores

WeeChat est@'a desarollado por:@*

@itemize @bullet
@item 
FlashCode
<@email{flashcode@@flashtux.org, flashcode AT flashtux.org}>

@end itemize

@ifhtml
@node Obtener soporte/ayuda, Copyright, Autores, Autores / Soporte
@end ifhtml
@ifnothtml
@node Obtener soporte/ayuda, , Autores, Autores / Soporte
@end ifnothtml
@section Obtener soporte/ayuda

Antes de pedir ayuda al soporte, por favor lee la documentaci@'on y las FAQ de WeeChat.@*
(La documentaci@'on es el documento que est@'as leyendo, si no has leido todo hasta aqu@'i,
puedes hacerlo ahora ...)@*

@itemize @bullet
@item
Soporte por IRC:@*
- servidor: @b{irc.freenode.net}@*
- canal: @b{#weechat}@*@*
@item
Foro WeeChat: @uref{http://forums.flashtux.org}@*@*
@item
Soporte mediante listas de difusi@'on:@*
- para apuntarse: @*@uref{http://mail.nongnu.org/mailman/listinfo/weechat-support}.@*
- para enviar un correo a la lista:@*@email{weechat-support@@nongnu.org}.@*

Los archivos de la lista est@'an aqu@'i:@*
@uref{http://mail.nongnu.org/archive/html/weechat-support}@*@*
@item
Ver la p@'agina de soporte para WeeChat para m@'as detalles:@*
@uref{http://weechat.flashtux.org/support.php}

@end itemize

@ifhtml
@node Copyright, , Obtener soporte/ayuda, Autores / Soporte
@section Copyright

Este manual documenta el cliente IRC WeeChat y hace parte del mismo proyecto WeeChat.@*

Copyright @copyright{} 2005 FlashCode
<@email{flashcode@@flashtux.org, flashcode AT flashtux.org}>@*
Traducido en espa@~nol por Iznogoud <@email{iznogoud@@dlfp.org, iznogoud AT dlfp.org}>@*
@*
Este documento puede ser utilizado seg@'un los t@'erminos de la licencia GNU General Public License
versi@'on 2 o posterior.
@end ifhtml

@bye
