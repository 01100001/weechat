<?xml version="1.0" encoding="iso-8859-1"?>

<!-- ********* WARNING! *********

     This file is automatically built with a Perl script. DO NOT EDIT!
-->

<command>alias  [alias_name [command [arguments]]]</command>
<programlisting>
create an alias for a command

alias_name: name of alias
   command: command name (WeeChat or IRC command, many commands can be separated by semicolons)
 arguments: arguments for command

</programlisting>
<command>is replaced by all arguments.</command>
<programlisting>Variables $nick, $channel and $server are replaced by current nick/channel/server.

</programlisting>
<command>buffer  [action [args] | number | [[server] [channel]]]</command>
<programlisting>
manage buffers

 action: action to do:
   move: move buffer in the list (may be relative, for example -1)
  close: close buffer (optional arg is part message, for a channel)
   list: list open buffers (no parameter implies this list)
 notify: set notify level for buffer (0=never, 1=highlight, 2=1+msg, 3=2+join/part)
         (when executed on server buffer, this sets default notify level for whole server)
 scroll: scroll in history (may be relative, and may end by a letter: s=sec, m=min, h=hour, d=day, M=month, y=year); if there is only letter, then scroll to beginning of this item

 number: jump to buffer by number
server,
channel: jump to buffer by server and/or channel name

Examples:
        move buffer: /buffer move 5
       close buffer: /buffer close this is part msg
         set notify: /buffer notify 2
    scroll 1 day up: /buffer scroll 1d  ==  /buffer scroll -1d  ==  /buffer scroll -24h
scroll to beginning
        of this day: /buffer scroll d
 scroll 15 min down: /buffer scroll +15m
  scroll 20 msgs up: /buffer scroll -20
   jump to #weechat: /buffer #weechat

</programlisting>
<command>builtin  command</command>
<programlisting>
launch WeeChat/IRC builtin command (do not look at plugins handlers or aliases)

command: command to execute (a '/' is automatically added if not found at beginning of command)


</programlisting>
<command>clear  [-all | number [number ...]]</command>
<programlisting>
clear window(s)

  -all: clear all buffers
number: clear buffer by number

</programlisting>
<command>connect  [-all [-nojoin] | servername [servername ...] [-nojoin] | hostname [-port port] [-ipv6] [-ssl]]</command>
<programlisting>
connect to server(s)

      -all: connect to all servers
servername: internal server name to connect
   -nojoin: do not join any channel (even if autojoin is enabled on server)
  hostname: hostname to connect, creating temporary server
      port: port for server (integer, default is 6667)
      ipv6: use IPv6 protocol
       ssl: use SSL protocol

</programlisting>
<command>disconnect  [-all | servername [servername ...]]</command>
<programlisting>
disconnect from server(s)

      -all: disconnect from all servers
servername: server name to disconnect

</programlisting>
<command>dcc  action [nickname [file]]</command>
<programlisting>
starts DCC (file or chat) or close chat

  action: 'send' (file) or 'chat' or 'close' (chat)
nickname: nickname to send file or chat
    file: filename (on local host)

</programlisting>
<command>debug  dump | buffer | windows</command>
<programlisting>
print debug messages

   dump: save memory dump in WeeChat log file (same dump is written when WeeChat crashes)
 buffer: dump buffer content with hexadecimal values in log file
windows: display windows tree

</programlisting>
<command>help  [command]</command>
<programlisting>
display help about commands

command: name of a WeeChat or IRC command

</programlisting>
<command>history  [clear | value]</command>
<programlisting>
show buffer command history

clear: clear history
value: number of history entries to show

</programlisting>
<command>ignore  [mask [[type | command] [channel [server]]]]</command>
<programlisting>
ignore IRC messages and/or hosts

   mask: nick or host mask to ignore
   type: type of message to ignore (action, ctcp, dcc, pv)
command: IRC command
channel: name of channel for ignore
 server: name of server for ignore

For each argument, '*' means all.
Without argument, /ignore command lists all defined ignore.

</programlisting>
<command>key  [key [function/command]] [unbind key] [functions] [call function ["args"]] [reset -yes]</command>
<programlisting>
bind/unbind keys

      key: display or bind this key to an internal function or a command (beginning by "/")
   unbind: unbind a key
functions: list internal functions for key bindings
     call: call a function by name (with optional arguments)
    reset: restore bindings to the default values and delete ALL personal bindings (use carefully!)

</programlisting>
<command>plugin  [list [name]] | [listfull [name]] | [load filename] | [autoload] | [reload [name]] | [unload [name]]</command>
<programlisting>
list/load/unload plugins

    list: list loaded plugins
listfull: list loaded plugins with detailed info for each plugin
    load: load a plugin
autoload: autoload plugins in system or user directory
  reload: reload one plugin (if no name given, unload all plugins, then autoload plugins)
  unload: unload one or all plugins

Without argument, /plugin command lists loaded plugins.

</programlisting>
<command>reconnect  [-all [-nojoin] | servername [servername ...] [-nojoin]]</command>
<programlisting>
reconnect to server(s)

      -all: reconnect to all servers
servername: server name to reconnect
   -nojoin: do not join any channel (even if autojoin is enabled on server)

</programlisting>
<command>save  [file]</command>
<programlisting>
save config to disk

file: filename for writing config

</programlisting>
<command>server  [list [servername]] | [listfull [servername]] | [add servername hostname [-port port] [-temp] [-auto | -noauto] [-ipv6] [-ssl] [-pwd password] [-nicks nick1 nick2 nick3] [-username username] [-realname realname] [-command command] [-autojoin channel[,channel]] ] | [copy servername newservername] | [rename servername newservername] | [keep servername] | [del servername]</command>
<programlisting>
list, add or remove servers

      list: list servers (no parameter implies this list)
  listfull: list servers with detailed info for each server
       add: create a new server
servername: server name, for internal and display use
  hostname: name or IP address of server
      port: port for server (integer, default is 6667)
      temp: create temporary server (not saved in config file)
      auto: automatically connect to server when WeeChat starts
    noauto: do not connect to server when WeeChat starts (default)
      ipv6: use IPv6 protocol
       ssl: use SSL protocol
  password: password for server
     nick1: first nick for server
     nick2: alternate nick for server
     nick3: second alternate nick for server
  username: user name
  realname: real name of user
      copy: duplicate a server
    rename: rename a server
      keep: keep server in config file (for temporary servers only)
       del: delete a server
   deloutq: delete messages out queue for all servers (all messages WeeChat is currently sending)

</programlisting>
<command>set  [option [ = value]]</command>
<programlisting>
set config options

option: name of an option (if name is full and no value is given, then help is displayed on option)
 value: value for option

Option may be: servername.server_xxx where "servername" is an internal server name and "xxx" an option for this server.

</programlisting>
<command>setp  [option [ = value]]</command>
<programlisting>
set plugin config options

option: name of a plugin option
 value: value for option

Option is format: plugin.option, example: perl.myscript.item1

</programlisting>
<command>unalias  alias_name</command>
<programlisting>
remove an alias

alias_name: name of alias to remove

</programlisting>
<command>unignore  [number | [mask [[type | command] [channel [server]]]]]</command>
<programlisting>
unignore IRC messages and/or hosts

 number: # of ignore to unignore (number is displayed by list of ignore)
   mask: nick or host mask to unignore
   type: type of message to unignore (action, ctcp, dcc, pv)
command: IRC command
channel: name of channel for unignore
 server: name of server for unignore

For each argument, '*' means all.
Without argument, /unignore command lists all defined ignore.

</programlisting>
<command>upgrade  [path_to_binary]</command>
<programlisting>
upgrade WeeChat without disconnecting from servers

path_to_binary: path to WeeChat binary (default is current binary)

This command run again a WeeChat binary, so it should have been compiled or installed with a package manager before running this command.

</programlisting>
<command>uptime  [-o]</command>
<programlisting>
show WeeChat uptime

-o: send uptime on current channel as an IRC message

</programlisting>
<command>window  [list | -1 | +1 | b# | up | down | left | right | splith [pct] | splitv [pct] | resize pct | merge [all]]</command>
<programlisting>
manage windows

  list: list open windows (no parameter implies this list)
    -1: jump to previous window
    +1: jump to next window
    b#: jump to next window displaying buffer number #
    up: switch to window above current one
  down: switch to window below current one
  left: switch to window on the left
 right: switch to window on the right
splith: split current window horizontally
splitv: split current window vertically
resize: resize window size, new size is &lt;pct&gt; pourcentage of parent window
 merge: merge window with another (all = keep only one window)

For splith and splitv, pct is a pourcentage which represents size of new window, computed with current window as size reference. For example 25 means create a new window with size = current_size / 4

</programlisting>
