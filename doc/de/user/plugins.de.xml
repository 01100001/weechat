<?xml version="1.0" encoding="UTF-8"?>

<!--

WeeChat documentation (german version)

Copyright (c) 2003-2008 by FlashCode <flashcode@flashtux.org>

This manual is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This manual is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->

<chapter id="chapPlugins">
  <!-- TRANSLATION NEEDED -->
  <title>Plugins</title>
  
  <para>
    This chapter describes WeeChat plugin mechanism and default plugins
    provided with WeeChat.
  </para>
  
  <para>
    To learn more about plugin or script development (thru API), please read
    "<literal>WeeChat developer guide</literal>".
  </para>
  
  <section id="secPluginsInWeeChat">
    <title>Plugins in WeeChat</title>
    
    <para>
      A plugin is dynamic library, written in C and compiled, which is loaded
      by WeeChat.
      Under GNU/Linux, the file has ".so" extension, ".dll" under Windows.
    </para>
    
    <para>
      Plugins found are automatically loaded when WeeChat is starting, and it
      is possible to load or unload plugins while WeeChat is running.
    </para>
    
    <para>
      It's important to make difference between a <literal>plugin</literal> and
      a <literal>script</literal>: a plugin is a binary file compiled and
      loaded with command<command>/plugin</command>, whereas a script is a text
      file loaded with a plugin like <literal>Perl</literal> with command
      <command>/perl</command>.
    </para>
    
    <para>
      You can use command <command>/plugin</command> to load/unload a plugin,
      or list all loaded plugins.
      When a plugin is unloaded, all buffers created by this plugin are
      automatically closed.
    </para>
    
    <para>
      Examples to load, unload or list plugins:
<screen>
/plugin load irc
/plugin unload irc
/plugin list
</screen>
    </para>
    
    <para>
      Default plugins are:
      <itemizedlist>
        <listitem>
          <para>alias: define alias for commands</para>
        </listitem>
        <listitem>
          <para>aspell: spell checking for command line</para>
        </listitem>
        <listitem>
          <para>charset: charset decoding/encoding for buffers</para>
        </listitem>
        <listitem>
          <para>demo: demo plugin (not compiled by default, not documented)</para>
        </listitem>
        <listitem>
          <para>fifo: FIFO pipe used to remotely send commands to WeeChat</para>
        </listitem>
        <listitem>
          <para>irc: IRC chat protocol</para>
        </listitem>
        <listitem>
          <para>logger: log buffers to files</para>
        </listitem>
        <listitem>
          <para>notify: notify level for buffers</para>
        </listitem>
        <listitem>
          <para>perl: Perl scripting API</para>
        </listitem>
        <listitem>
          <para>python: Python scripting API</para>
        </listitem>
        <listitem>
          <para>ruby: Ruby scripting API</para>
        </listitem>
        <listitem>
          <para>lua: Lua scripting API</para>
        </listitem>
        <listitem>
          <para>tcl: Tcl scripting API</para>
        </listitem>
        <listitem>
          <para>xfer: file transfert and direct chat</para>
        </listitem>
      </itemizedlist>
    </para>
    
  </section>
  
  &plugin_alias.de.xml;
  
  &plugin_aspell.de.xml;
  
  &plugin_charset.de.xml;
  
  &plugin_fifo.de.xml;
  
  &plugin_irc.de.xml;
  
  &plugin_logger.de.xml;
  
  &plugin_scripts.de.xml;
  
  &plugin_xfer.de.xml;
  
</chapter>
