* [[option_relay.color.client]] *relay.color.client*
** Beschreibung: `Textfarbe für Client-Beschreibung`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `cyan`)

* [[option_relay.color.status_active]] *relay.color.status_active*
** Beschreibung: `Textfarbe für Status: "Verbindung hergestellt"`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `lightblue`)

* [[option_relay.color.status_auth_failed]] *relay.color.status_auth_failed*
** Beschreibung: `Textfarbe für Status: "Authentifizierung gescheitert"`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `lightred`)

* [[option_relay.color.status_connecting]] *relay.color.status_connecting*
** Beschreibung: `Textfarbe für Status: "verbinde"`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `yellow`)

* [[option_relay.color.status_disconnected]] *relay.color.status_disconnected*
** Beschreibung: `Textfarbe für Status: "Verbindung getrennt"`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `lightred`)

* [[option_relay.color.status_waiting_auth]] *relay.color.status_waiting_auth*
** Beschreibung: `Textfarbe für Status: "warte auf Authentifizierung"`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `brown`)

* [[option_relay.color.text]] *relay.color.text*
** Beschreibung: `Textfarbe in Relay-Buffer`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `default`)

* [[option_relay.color.text_bg]] *relay.color.text_bg*
** Beschreibung: `Hintergrundfarbe in Relay-Buffer`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `default`)

* [[option_relay.color.text_selected]] *relay.color.text_selected*
** Beschreibung: `Textfarbe für selektierte Zeile in Relay-Buffer`
** Typ: Farbe
** Werte: ein Farbname für WeeChat (default, black, (dark)gray, white, (light)red, (light)green, brown, yellow, (light)blue, (light)magenta, (light)cyan), eine Terminal-Farbnummer oder ein Alias; Attribute können vor eine Farbe gesetzt werden (gilt ausschließlich für die Textfarbe und nicht für den Hintergrund): "*" für fett, "!" für invertiert, "_" für unterstrichen (Standardwert: `white`)

* [[option_relay.irc.backlog_max_minutes]] *relay.irc.backlog_max_minutes*
** Beschreibung: `maximum number of minutes in backlog per IRC channel (0 = unlimited, examples: 1440 = one day, 10080 = one week, 43200 = one month, 525600 = one year)`
** Typ: integer
** Werte: 0 .. 2147483647 (Standardwert: `1440`)

* [[option_relay.irc.backlog_max_number]] *relay.irc.backlog_max_number*
** Beschreibung: `maximum number of lines in backlog per IRC channel (0 = unlimited)`
** Typ: integer
** Werte: 0 .. 2147483647 (Standardwert: `256`)

* [[option_relay.irc.backlog_since_last_disconnect]] *relay.irc.backlog_since_last_disconnect*
** Beschreibung: `display backlog starting from last client disconnect`
** Typ: boolesch
** Werte: on, off (Standardwert: `on`)

* [[option_relay.irc.backlog_tags]] *relay.irc.backlog_tags*
** Beschreibung: `tags of messages which are displayed in backlog per IRC channel (supported tags: "irc_join", "irc_part", "irc_quit", "irc_nick", "irc_privmsg"), "*" = all supported tags`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `"irc_privmsg"`)

* [[option_relay.irc.backlog_time_format]] *relay.irc.backlog_time_format*
** Beschreibung: `format for time in backlog messages (see man strftime for format) (not used if server capability "server-time" was enabled by client, because time is sent as irc tag); empty string = disable time in backlog messages`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `"[%H:%M] "`)

* [[option_relay.look.auto_open_buffer]] *relay.look.auto_open_buffer*
** Beschreibung: `öffnet automatisch einen Relay-Buffer, falls eine Verbindung zu einem neuen Client hergestellt wird`
** Typ: boolesch
** Werte: on, off (Standardwert: `on`)

* [[option_relay.look.raw_messages]] *relay.look.raw_messages*
** Beschreibung: `Anzahl der IRC-RAW-Nachrichten die im Speicher gehalten werden sollen falls der RAW-Daten-Buffer geschlossen ist (die Nachrichten werden umgehend angezeigt sobald der RAW-Daten-Buffer geöffnet wird)`
** Typ: integer
** Werte: 0 .. 65535 (Standardwert: `256`)

* [[option_relay.network.allowed_ips]] *relay.network.allowed_ips*
** Beschreibung: `regulärer Ausdruck für IP Adressen die auf das Relay zugreifen dürfen (zwischen Groß- und Kleinschreibung nicht dabei nicht unterschieden. Um zwischen Groß-und Kleinschreibung zu unterscheiden muss am Wortanfang "(?-i)" genutzt werden) . Sollte IPv6 aktiviert sein und es wird eine IPv4 Verbindung aufgebaut, werden die IPv6 Adressen nach IPv4 gewandelt  (siehe: "::ffff:127.0.0.1"), Beispiele: "^((::ffff:)?123.45.67.89|192.160.*)$"`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `""`)

* [[option_relay.network.bind_address]] *relay.network.bind_address*
** Beschreibung: `Adresse für Bind (falls nicht gesetzt ist eine Verbindung zu allen Interfaces möglich. Wird die Adresse "127.0.0.1" genutzt kann nur eine Verbindung mit dem lokalen Rechner hergestellt werden)`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `""`)

* [[option_relay.network.compression_level]] *relay.network.compression_level*
** Beschreibung: `Kompressionsstärke der Pakete die durch das WeeChat Protokoll an den Client gesendet werden sollen (0 = Kompression deaktiviert, 1 = niedrige Kompression ... 9 = stärkste Kompression)`
** Typ: integer
** Werte: 0 .. 9 (Standardwert: `6`)

* [[option_relay.network.ipv6]] *relay.network.ipv6*
** Beschreibung: `lauscht standardmäßig am IPv6 Socket (zusätzlich zu IPv4, welches als Standardprotokoll genutzt wird); mittels des Protokollnamens kann das IPv4 und IPv6 Protokoll, einzeln oder gemeinsam, erzwungen werden (siehe /help relay)`
** Typ: boolesch
** Werte: on, off (Standardwert: `on`)

* [[option_relay.network.max_clients]] *relay.network.max_clients*
** Beschreibung: `maximale Anzahl an Clients die mit einem Port verbunden sein dürfen`
** Typ: integer
** Werte: 1 .. 1024 (Standardwert: `5`)

* [[option_relay.network.password]] *relay.network.password*
** Beschreibung: `Passwort wird von Clients benötigt um Zugriff auf dieses Relay zu erhalten (kein Eintrag bedeutet dass kein Passwort benötigt wird)`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `""`)

* [[option_relay.network.ssl_cert_key]] *relay.network.ssl_cert_key*
** Beschreibung: `Datei mit SSL Zertifikat und privatem Schlüssel (zur Nutzung von Clients mit SSL)`
** Typ: Zeichenkette
** Werte: beliebige Zeichenkette (Standardwert: `"%h/ssl/relay.pem"`)

