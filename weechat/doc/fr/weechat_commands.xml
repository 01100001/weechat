<?xml version="1.0" encoding="iso-8859-1"?>

<!-- ********* WARNING! *********

     This file is automatically built with a Perl script. DO NOT EDIT!
-->

<command>alias  [nom_alias [commande [paramètres]]]</command>
<programlisting>
créer un alias pour une commande

 nom_alias: nom de l'alias
  commande: nom de la commande (commande WeeChat ou IRC, plusieurs commandes peuvent être séparées par des point-virgules)
paramètres: paramètres pour la commande

</programlisting>
<command>est remplacé par tous les paramètres.</command>
<programlisting>Les variables $nick, $channel et $server sont remplacées par le pseudo/canal/serveur courant.

</programlisting>
<command>buffer  [action [args] | nombre | [[serveur] [canal]]]</command>
<programlisting>
gestion des tampons

 action: action à effectuer:
   move: déplace le tampon dans la liste (peut être relatif, par exemple -1)
  close: ferme le tampon (le paramètre optionnel est le message de fin, pour un canal)
   list: liste les tampons ouverts (pas de paramètre affiche cette liste)
 notify: fixe le niveau de notification (0=jamais, 1=highlight, 2=1+msg, 3=2+join/part)
         (quand exécuté sur un tampon serveur, cela fixe le niveau de notification par défaut pour le serveur entier)
 scroll: fait défiler l'historique (peut être relatif, et peut se terminer par une lettre: s=sec, m=min, h=heure, d=jour, M=mois, y=année); s'il y a seulement une lettre, alors fait défiler jusqu'au début de cet élément

 nombre: saute au tampon qui a ce numéro
serveur,
  canal: saute au tampon par serveur et/ou nom de canal

Exemples :
     déplacer tampon: /buffer move 5
       fermer tampon: /buffer close c'est le message de départ
    niveau de notif.: /buffer notify 2
 défiler 1 jour haut: /buffer scroll 1d  ==  /buffer scroll -1d  ==  /buffer scroll -24h
    défiler au début
          de ce jour: /buffer scroll d
  défiler 15 min bas: /buffer scroll +15m
défiler 20 msgs haut: /buffer scroll -20
  aller sur #weechat: /buffer #weechat

</programlisting>
<command>builtin  commande</command>
<programlisting>
lance une commande WeeChat/IRC interne (sans regarder les gestionnaires de commandes et les alias)

commande: commande à exécuter (un '/' est automatiquement ajouté s'il n'est pas trouvé au début de la commande)


</programlisting>
<command>clear  [-all | nombre]</command>
<programlisting>
effacer la/les fenêtre(s)

  -all: effacer tous les tampons
nombre: effacer un tampon par son numéro

</programlisting>
<command>connect  [-all [-nojoin] | nom_serveur [nom_serveur...] [-nojoin]]</command>
<programlisting>
se connecter à un/plusieurs serveur(s)

       -all: se connecter à tous les serveurs
nom_serveur: nom du serveur pour se connecter
    -nojoin: ne rejoindre aucun canal (même si l'autojoin est activé pour le serveur)

</programlisting>
<command>disconnect  [-all | nom_serveur [nom_serveur...]]</command>
<programlisting>
se déconnecter d'un/plusieurs serveur(s)

       -all: se déconnecter de tous les serveurs
nom_serveur: nom du serveur pour se déconnecter

</programlisting>
<command>dcc  action [pseudo [fichier]]</command>
<programlisting>
démarre le DCC (fichier ou discussion) ou ferme une discussion

 action: 'send' (envoi de fichier) ou 'chat' (discussion) ou 'close' (fermeture discussion)
 pseudo: pseudo pour envoyer le fichier ou discuter
fichier: nom du fichier (sur la machine locale)

</programlisting>
<command>debug  dump | windows</command>
<programlisting>
affiche des messages de debogage

   dump: affiche les variables mémoire WeeChat dans le fichier log (les mêmes messages sont affichés lorsque WeeChat plante)
windows: affiche l'arbre des fenêtres

</programlisting>
<command>help  [commande]</command>
<programlisting>
afficher l'aide sur les commandes

commande: nom d'une commande WeeChat ou IRC

</programlisting>
<command>history  [clear | valeur]</command>
<programlisting>
affiche l'historique des commandes du tampon

clear: effacer l'historique
valeur: nombre d'entrées dans l'historique à afficher

</programlisting>
<command>ignore  [masque [[type | commande] [canal [serveur]]]]</command>
<programlisting>
ignorer des messages IRC et/ou des hôtes

  masque: pseudo ou hôte à ignorer
    type: type de message à ignorer (action, ctcp, dcc, pv)
commande: commande IRC
   canal: nom du canal pour le ignore
 serveur: nom du serveur pour le ignore

Pour chaque paramètre, '*' signifie tou(te)s.
Sans paramètres, la commande /ignore liste les ignore définis.

</programlisting>
<command>key  [touche [fonction/commande]] [unbind touche] [functions] [call fonction ["params"]] [reset -yes]</command>
<programlisting>
associer/libérer des touches

   touche: voir ou associer cette touche à une fonction interne ou une commande (commençant par "/")
   unbind: supprimer l'association à une touche
functions: lister la liste des fonctions internes pour les associations de touches
     call: appeler une foonction par son nom (avec paramètres optionnels)
    reset: restaure les touches aux valeurs par défaut et supprime TOUTES les touches personnelles (utiliser avec précaution !)

</programlisting>
<command>plugin  [list [nom]] | [listfull [nom]] | [load fichier] | [autoload] | [reload [nom]] | [unload [nom]]</command>
<programlisting>
liste/charge/décharge des extensions

    list: lister les extensions chargées
listfull: lister les extensions chargées avec de l'info détaillée pour chaque extension
    load: charger une extension
autoload: charger automatiquement les extensions dans un répertoire système ou utilisateur
  reload: recharger une extension (si pas de nom donné, décharger toutes les extensions, puis puis recharger automatiquement les extensions)
  unload: décharger une ou plusieurs exteneions

Sans paramètre, la commande /plugin liste les extensions chargées.

</programlisting>
<command>reconnect  [-all [-nojoin] | nom_serveur [nom_serveur...] [-nojoin]]</command>
<programlisting>
se reconnecter à un/plusieurs serveur(s)

       -all: se reconnecter à tous les serveurs
nom_serveur: nom du serveur pour se reconnecter
    -nojoin: ne rejoindre aucun canal (même si l'autojoin est activé pour le serveur)

</programlisting>
<command>save  [fichier]</command>
<programlisting>
sauvegarder la configuration sur disque

fichier: fichier pour sauvegarder la configuration

</programlisting>
<command>server  [list [nom_serveur]] | [listfull [nom_serveur]] | [nom_serveur] | [nom_serveur nom/IP port [-auto | -noauto] [-ipv6] [-ssl] [-pwd mot_de_passe] [-nicks pseudo1 pseudo2 pseudo3] [-username nom_utilisateur] [-realname nom_réel] [-command commande] [-autojoin canal[,canal]] ] | [copy nom_serveur nouveau_nom_serveur] [rename nom_serveur nouveau_nom_serveur] [del nom_serveur]</command>
<programlisting>
liste, ajoute ou retire des serveurs

           list: afficher les serveurs (pas de paramètre implique cette liste)
       listfull: afficher les serveurs avec de l'info détaillée pour chaque
    nom_serveur: nom du serveur, pour usage interne et affichage
         nom/IP: nom ou adresse IP du serveur
           port: port pour le serveur (nombre entier)
           ipv6: utiliser le protocole IPv6
            ssl: utiliser le protocole SSL
   mot_de_passe: mot de passe pour le serveur
        pseudo1: premier pseudo pour le serveur
        pseudo2: pseudo alternatif pour le serveur
        pseudo3: second pseudo alternatif pour le serveur
nom_utilisateur: nom d'utilisateur
       nom_réel: nom réel de l'utilisateur
           copy: dupliquer un serveur
         rename: renommer un serveur
            del: supprimer un serveur

</programlisting>
<command>set  [option [ = valeur]]</command>
<programlisting>
modifier des options de configuration

option: nom de l'option (si le nom est complet et qu'aucune valeur n'est donnée, alors l'aide sur l'option est affichée)
valeur: valeur pour l'option

L'option peut être: nomserveur.server_xxx où "nomserveur" est le nom interne d'un serveur et "xxx" une option pour ce serveur.

</programlisting>
<command>setp  [option [ = valeur]]</command>
<programlisting>
modifier des options de configuration des extensions

option: nom d'une option d'extension
valeur: valeur pour l'option

L'option est au format: extension.option, par exemple: perl.monscript.variable1

</programlisting>
<command>unalias  nom_alias</command>
<programlisting>
supprimer un alias

nom_alias: nom de l'alias à supprimer

</programlisting>
<command>unignore  [nombre | [masque [[type | commande] [canal [serveur]]]]]</command>
<programlisting>
supprimer le ignore des messages IRC et/ou des hôtes

  nombre: numéro de ignore à supprimer (le nombre est affiché sur la liste des ignore)
  masque: pseudo ou hôte à ignorer
    type: type de message à ignorer (action, ctcp, dcc, pv)
commande: commande IRC
   canal: nom du canal pour le ignore
 serveur: nom du serveur pour le ignore

Pour chaque paramètre, '*' signifie tou(te)s.
Sans paramètre, /ignore liste les ignore définis.

</programlisting>
<command>upgrade  [chemin_vers_binaire]</command>
<programlisting>
mettre à jour WeeChat sans se déconnecter des serveurs

chemin_vers_binaire: chemin vers le binaire WeeChat (par défaut le binaire courant)

Cette commande lance à nouveau un binaire WeeChat, il doit donc avoir été compilé ou installé via un gestionnaire de paquet avant de lancer cette commande.

</programlisting>
<command>uptime  [-o]</command>
<programlisting>
montrer l'uptime de WeeChat

-o: envoyer l'uptime sur le canal courant en tant que message IRC

</programlisting>
<command>window  [list | -1 | +1 | b# | up | down | left | right | splith [pct] | splitv [ptc] | resize pct | merge [all]]</command>
<programlisting>
gestion des fenêtres

  list: liste les fenêtres ouvertes (pas de paramètre affiche cette liste)
    -1: saute à la fenêtre précédente
    +1: saute à la fenêtre suivante
    b#: saute à la fenêtre affichant le tampon #
    up: saute à la fenêtre au dessus
  down: saute à la fenêtre au dessous
  left: saute à la fenêtre à gauche
 right: saute à la fenêtre à droite
splith: éclate la fenêtre en deux horizontalement
splitv: éclate la fenêtre en deux verticalement
resize: redimensionne une fenêtre, la nouvelle taille est &lt;pct&gt; pourcentage de la fenêtre parent
 merge: fusionne la fenêtre avec une autre

Pour splith et splitv, pct est un pourcentage qui représente la taille de la nouvelle fenêtre, calculée par rapport à la taille de la fenêtre courante. Par exemple 25 signifie créer une fenêtre qui a pour taille: taille_courante / 4

</programlisting>
